const scale=new THREE.Vector3(1,1,1),mesh_id_keys={};function dotbim_CreateMeshes(e){if(void 0===e)return;if("string"!=typeof e)return[];e=JSON.parse(e);const{schema_version:t,meshes:o,elements:r,info:n}=e;if(!o||!r)return[];r.forEach((e=>{if(mesh_id_keys[e.mesh_id]||(mesh_id_keys[e.mesh_id]={face_colors_group:{},color_group:{}}),e.face_colors){let t=mesh_id_keys[e.mesh_id].face_colors_group[e.face_colors];t?t.instance_count++:mesh_id_keys[e.mesh_id].face_colors_group[e.face_colors]={instance_count:1,current_instance:0,mesh:null}}else{let t=[e.color.r,e.color.g,e.color.b,e.color.a],o=mesh_id_keys[e.mesh_id].color_group[t];o?o.instance_count++:mesh_id_keys[e.mesh_id].color_group[t]={instance_count:1,current_instance:0,mesh:null}}}));let s=dotbim_Meshes2Geometrys(o);const c=new THREE.Group;return c.userData.schema_version=t||{},c.userData.info=n||{},n.Name&&""!==n.Name&&(c.name=n.Name),dotbim_Elemments2Meshes(r,s).forEach((e=>{c.add(e)})),c.children.length>1&&c.rotateX(-Math.PI/2),c}function dotbim_Elemments2Meshes(e,t){return e.map((e=>dotbim_Elemment2Mesh(e,t)))}function dotbim_Elemment2Mesh(e,t){let{mesh_id:o,vector:r,rotation:n,guid:s,type:c,color:a,face_colors:i,info:l}=e,_=t[o].clone(),u=l.Name||"";_.computeVertexNormals();let m,d=new THREE.MeshStandardMaterial({name:l.Material||"Default Material",side:THREE.DoubleSide,flatShading:!1,transparent:!0,metalness:.5,roughness:.5,color:16777215});if(a&&0===a.r&&0===a.g&&0===a.b&&0===a.a&&(a=null),i){let e=createFaceColors(i);_.setAttribute("color",new THREE.Float32BufferAttribute(e,4))}else a&&(_.deleteAttribute("color"),d.color=convertTHREEColorRGB(a.r,a.g,a.b),d.opacity=convertColorAlpha(a.a),d.transparent=d.opacity<1,d.needsUpdate=!0);if(_.getAttribute("color")&&(d.color.setRGB(1,1,1),d.opacity=1,d.transparent=!0,d.vertexColors=!0,d.needsUpdate=!0),r||(r={x:0,y:0,z:0}),n||(n={qx:0,qy:0,qz:0,qw:1}),i&&mesh_id_keys[o].face_colors_group[i]){let e=mesh_id_keys[o].face_colors_group[i];null===e.mesh&&(e.mesh=new THREE.InstancedMesh(_,d,e.instance_count)),m=e.mesh;let t=new THREE.Vector3(r.x,r.y,r.z),a=new THREE.Quaternion(n.qx,n.qy,n.qz,n.qw),h=(new THREE.Matrix4).compose(t,a,scale);m.setMatrixAt(e.current_instance,h),m.instanceMatrix.needsUpdate=!0,""===u&&(u="mesh_"+o+"_"+m.id+"_"+e.current_instance),m.userData[e.current_instance]={name:u,guid:s||{},type:c||{},info:l||{}},e.current_instance++}else{let e=[a.r,a.g,a.b,a.a],t=mesh_id_keys[o].color_group[e];null===t.mesh&&(t.mesh=new THREE.InstancedMesh(_,d,t.instance_count)),m=t.mesh;let i=new THREE.Vector3(r.x,r.y,r.z),h=new THREE.Quaternion(n.qx,n.qy,n.qz,n.qw),f=(new THREE.Matrix4).compose(i,h,scale);m.setMatrixAt(t.current_instance,f),m.instanceMatrix.needsUpdate=!0,m.setColorAt(t.current_instance,d.color),m.instanceColor.needsUpdate=!0,""===u&&(u="mesh_"+o+"_"+m.id+"_"+t.current_instance),m.userData[t.current_instance]={name:u,guid:s||{},type:c||{},info:l||{}},t.current_instance++}return m}function dotbim_Meshes2Geometrys(e){return e.map((e=>dotbim_Mesh2GeometryColor(e)))}function dotbim_Mesh2GeometryColor(e){const{mesh_id:t,coordinates:o,indices:r,colors:n}=e;let s=new THREE.BufferGeometry;return s.setIndex(r),s.setAttribute("position",new THREE.Float32BufferAttribute(o,3)),s=s.toNonIndexed(),n&&(buffer_colors=createFaceColors(n,3,4*r.length),s.setAttribute("color",new THREE.Float32BufferAttribute(buffer_colors,4))),s.computeVertexNormals(),s}function createFaceColors(e,t=3,o=0){let r=[];for(let o=0;o<e.length;o+=4){let s=e[o+0],c=e[o+1],a=e[o+2],i=convertColorAlpha(e[o+3]);var n=convertTHREEColorRGB(s,c,a);for(let e=0;e<t;e++)r.push(n.r,n.g,n.b,i)}for(;r.length<o;)for(let e=0;e<t;e++)r.push(r[0],r[1],r[2],r[3]);return r}function convertTHREEColorRGB(e,t,o){return new THREE.Color(e/255,t/255,o/255)}function convertColorAlpha(e){return e/255}