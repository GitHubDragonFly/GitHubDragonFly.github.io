var scope,root,bone_id,blobs=null,bones=[],has_bones=!1,has_points_or_lines=!1,isPoints=!1,isLines=!1;THREE.AssimpJSONLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.AssimpJSONLoader.prototype={constructor:THREE.AssimpJSONLoader,texturePath:"",load:function(e,t,s,n,o){scope=this,o&&"string"==typeof o?o.includes(",")?blobs=o.split(","):scope.texturePath=o:scope.texturePath=scope.extractUrlBase(e);var r=new THREE.FileLoader(scope.manager);r.setCrossOrigin(scope.crossOrigin),r.load(e,(function(e){try{var s,o,r=JSON.parse(e)}catch(e){return void n(e)}if(r&&void 0===r.meshes)n("Unsupported file");else{if(void 0!==(o=r.__metadata__)){if("assimp2json"!==o.format)return void n("Not an assimp2json scene");if(o.version<100&&o.version>=200)return void n("Unsupported assimp2json file format version")}(s=scope.parse(r)).has_bones=has_bones,r.animations&&!0===has_bones&&(s.animations=r.animations),t(s)}}),s,n)},setCrossOrigin:function(e){this.crossOrigin=e},extractUrlBase:function(e){let t=e.split("/");return t.pop(),(t.length<1?".":t.join("/"))+"/"},parse:function(e){let t=this.parseMeshList(e,this.parseMesh),s=this.parseMaterialList(e,this.parseMaterial);return this.parseObject(e,e.rootnode,t,s)},parseMeshList:function(e,t){let s=new Array(e.meshes.length);for(let n=0;n<e.meshes.length;n++)s[n]=t.call(this,e.meshes[n],e);return s},parseMaterialList:function(e,t){let s=new Array(e.materials.length);for(let n=0;n<e.materials.length;n++)s[n]=t.call(this,e.materials[n],e.textures);return s},parseMesh:function(e,t){var s,n,o,r,i,a,l,c,p,h;for(s=new THREE.Geometry,1===e.primitivetypes?(isPoints=!0,has_points_or_lines=!0,s.isPoints=!0):2===e.primitivetypes&&(isLines=!0,has_points_or_lines=!0,s.isLines=!0),n=0,r=e.vertices.length;n<r;n+=3)s.vertices.push(new THREE.Vector3(e.vertices[n],e.vertices[n+1],e.vertices[n+2]));for(n=0,r=e.faces.length;n<r;n++)a=new THREE.Face3,l=e.faces[n],a.a=l[0],a.b=!0===isPoints?l[0]:l[1],a.c=!0===isPoints?l[0]:!0===isLines?l[1]:l[2],a.materialIndex=0,s.faces.push(a);for(e.texturecoords=e.texturecoords||[],void 0===s.faceVertexUvs&&(s.faceVertexUvs={}),n=0,r=e.texturecoords.length;n<r;n++){function u(e,t,s){for(o=0,i=t.length;o<i;o++)a=t[o],c=2*a.a,p=2*a.b,h=2*a.c,s.push([new THREE.Vector2(e[c],e[c+1]),new THREE.Vector2(e[p],e[p+1]),new THREE.Vector2(e[h],e[h+1])])}void 0===s.faceVertexUvs[n]&&(s.faceVertexUvs[n]=[]),u(e.texturecoords[n],s.faces,s.faceVertexUvs[n])}if(e.normals){!function(e,t){for(n=0,r=t.length;n<r;n++)a=t[n],c=3*a.a,p=3*a.b,h=3*a.c,a.vertexNormals=[new THREE.Vector3(e[c],e[c+1],e[c+2]),new THREE.Vector3(e[p],e[p+1],e[p+2]),new THREE.Vector3(e[h],e[h+1],e[h+2])]}(e.normals,s.faces)}if(e.colors&&e.colors[0]){!function(e,t){function s(t){let s=new THREE.Color;return s.setRGB(e[t],e[t+1],e[t+2]),s}for(n=0,r=t.length;n<r;n++)a=t[n],c=4*a.a,p=4*a.b,h=4*a.c,a.vertexColors=[s(c),s(p),s(h)]}(e.colors[0],s.faces)}return e.bones&&(this.parseBones(t.rootnode,e.bones),s.bones=bones,has_bones=!0),s.computeFaceNormals(),s.computeVertexNormals(),s.computeBoundingBox(),s.computeBoundingSphere(),isPoints=!1,isLines=!1,s},parseMaterial:function(e,t){scope=this;let s,n,o,r=null,i=[],a={color:16777215,flatShading:!1};function l(e){let t=new THREE.Color;return t.setRGB(e[0],e[1],e[2]),t}function c(){const e=new Uint8Array(65536),t=new THREE.Color(16777215),s=Math.floor(255*t.r),n=Math.floor(255*t.g),o=Math.floor(255*t.b);for(let t=0;t<16384;t++){const r=4*t;e[r+0]=s,e[r+1]=n,e[r+2]=o,e[r+3]=255}let r=new THREE.DataTexture(e,128,128);return r.encoding=THREE.sRGBEncoding,r}for(s in e.properties){if(o=e.properties[s],"$tex.file"===o.key?1!==o.semantic&&2!==o.semantic&&4!==o.semantic&&5!==o.semantic&&6!==o.semantic||function(e){var s,n=new THREE.TextureLoader(scope.manager);let a;1===e?s="map":2===e?s="specularMap":4===e?s="emissiveMap":5===e?s="bumpMap":6===e&&(s="normalMap"),i.push(s);let l=o.value;if(!0===o.value.includes("/")?l=l.substring(l.lastIndexOf("/")+1):!0===l.includes("\\")&&(l=l.substring(l.lastIndexOf("\\")+1)),!0===l.includes("*"))try{let e=parseInt(l.substring(l.lastIndexOf("*")+1));t&&t[e]&&t[e].data&&(a="data:image/"+t[e].formathint+";base64,"+t[e].data)}catch(e){}else l.toLowerCase().endsWith(".dds")?THREE.DDSLoader&&(n=new THREE.DDSLoader(scope.manager)):l.toLowerCase().endsWith(".tga")&&THREE.TGALoader&&(n=new THREE.TGALoader(scope.manager));if(n.setCrossOrigin(scope.crossOrigin),null!==blobs)for(j=0,ee=blobs.length;j<ee;j+=2)blobs[j]===l&&(a=blobs[j+1]);else void 0===a&&(a=scope.texturePath+"/"+l);void 0===a||(a=a.replace(/\\/g,"/"),n.load(a,(function(e){e&&(e.wrapS=e.wrapT=THREE.RepeatWrapping,e.encoding=THREE.sRGBEncoding,e.format=THREE.RGBAFormat,r[s]=e,r.needsUpdate=!0)})))}(o.semantic):"?mat.name"===o.key?a.name=o.value:"$clr.diffuse"===o.key?a.color=l(o.value):"$clr.specular"===o.key?a.specular=l(o.value):"$clr.emissive"===o.key?a.emissive=l(o.value):"$mat.shadingm"===o.key?o.value>=1&&(a.flatShading=!0):"$mat.shininess"===o.key&&(a.shininess=o.value),i.length)for(s=0,n=i.length;s<n;s++)a[i[s]]=c();r=new THREE.MeshPhongMaterial(a)}return r},parseBones:function(e,t){if(t)for(bones.length=0,i=0,il=e.children.length;i<il;i++){root=new THREE.Object3D;let s=new THREE.Vector3,n=new THREE.Quaternion,o=new THREE.Vector3;(new THREE.Matrix4).fromArray(e.children[i].transformation).transpose().decompose(s,n,o),root.position.x=s.x,root.position.y=s.y,root.position.z=s.z,root.quaternion.x=n.x,root.quaternion.y=n.y,root.quaternion.z=n.z,root.quaternion.w=n.w,root.scale.x=o.x,root.scale.y=o.y,root.scale.z=o.z,bone_id=0;let r=-1;this.traverse(e.children[i].children,r,t)}},traverse:function(e,t,s){for(let n=0,o=e.length;n<o;n++){let o=new THREE.Vector3,r=new THREE.Quaternion,i=new THREE.Vector3,a=new THREE.Bone;a.name=e[n].name,a.transformation=e[n].transformation;let l=(new THREE.Matrix4).fromArray(e[n].transformation);l.getInverse(l);s.every((t=>{if(t.name===e[n].name){a.offsetMatrix=t.offsetmatrix,a.weights=t.weights;let e=(new THREE.Matrix4).fromArray(t.offsetmatrix);e.getInverse(e);return l.multiply(e).transpose().decompose(o,r,i),a.position.x=o.x,a.position.y=o.y,a.position.z=o.z,a.quaternion.x=r.x,a.quaternion.y=r.y,a.quaternion.z=r.z,a.quaternion.w=r.w,a.scale.x=i.x,a.scale.y=i.y,a.scale.z=i.z,!1}return!0})),bones.push(a),-1===t?root.add(a):bones[bone_id-t-1].add(a),bone_id+=1,t+=1,e[n].children&&e[n].children.length>0&&this.traverse(e[n].children,n,s)}},parseObject:function(e,t,s,n){let o,r,i=new THREE.Object3D;for(i.name=t.name||"",i.matrix=(new THREE.Matrix4).fromArray(t.transformation).transpose(),i.matrix.decompose(i.position,i.quaternion,i.scale),o=0;t.meshes&&o<t.meshes.length;o++){r=t.meshes[o];let a="Geometry"===s[r].type?(new THREE.BufferGeometry).fromGeometry(s[r]):s[r];bones.length>0&&(a.bones=bones),s[r].isPoints&&!0===s[r].isPoints?i.add(new THREE.Points(a,new THREE.PointsMaterial({size:.02,color:n[e.meshes[r].materialindex].color}))):s[r].isLines&&!0===s[r].isLines?i.add(new THREE.LineSegments(a,new THREE.LineBasicMaterial({color:n[e.meshes[r].materialindex].color,linewidth:.5}))):i.add(new THREE.Mesh(a,n[e.meshes[r].materialindex]))}for(o=0;t.children&&o<t.children.length;o++)i.add(this.parseObject(e,t.children[o],s,n));return i.has_points_or_lines=has_points_or_lines,i}};