class OrbitControlsGizmo{constructor(e,t){t=Object.assign({size:90,padding:8,bubbleSizePrimary:8,bubbleSizeSecondary:6,lineWidth:2,fontSize:"12px",fontFamily:"arial",fontWeight:"bold",fontColor:"#222222",className:"obit-controls-gizmo",colors:{x:["#f73c3c","#942424"],y:["#6ccb26","#417a17"],z:["#178cf0","#0e5490"]}},t),this.lock=!1,this.lockX=!1,this.lockY=!1,this.update=()=>{if(!this.lock){o.updateMatrix(),r.extractRotation(o.matrix).getInverse(r.extractRotation(o.matrix));for(let e=0,t=m.length;e<t;e++)R(m[e]);m.sort(((e,t)=>e.position.z>t.position.z?1:-1)),T(!0)}},this.dispose=()=>{i.removeEventListener("change",this.update),i.removeEventListener("start",(()=>this.domElement.classList.add("inactive"))),i.removeEventListener("end",(()=>this.domElement.classList.remove("inactive"))),this.domElement.removeEventListener("pointerdown",f,!1),this.domElement.removeEventListener("pointerenter",y,!1),this.domElement.removeEventListener("pointermove",x,!1),this.domElement.removeEventListener("click",g,!1),window.removeEventListener("pointermove",z,!1),window.removeEventListener("pointerup",w,!1),this.domElement.remove()};const n=this,i=e,o=e.object,r=new THREE.Matrix4,s=new THREE.Vector3,l=new THREE.Vector2,c=new THREE.Vector2,a=new THREE.Vector2,d=new THREE.Vector3(t.size/2,t.size/2,0),m=function(){const e=t.colors,n=t.lineWidth,i={primary:t.bubbleSizePrimary,secondary:t.bubbleSizeSecondary};return[{axis:"x",direction:new THREE.Vector3(1,0,0),size:i.primary,color:e.x,line:n,label:"X",position:new THREE.Vector3(0,0,0)},{axis:"y",direction:new THREE.Vector3(0,1,0),size:i.primary,color:e.y,line:n,label:"Y",position:new THREE.Vector3(0,0,0)},{axis:"z",direction:new THREE.Vector3(0,0,1),size:i.primary,color:e.z,line:n,label:"Z",position:new THREE.Vector3(0,0,0)},{axis:"-x",direction:new THREE.Vector3(-1,0,0),size:i.secondary,color:e.x,position:new THREE.Vector3(0,0,0)},{axis:"-y",direction:new THREE.Vector3(0,-1,0),size:i.secondary,color:e.y,position:new THREE.Vector3(0,0,0)},{axis:"-z",direction:new THREE.Vector3(0,0,-1),size:i.secondary,color:e.z,position:new THREE.Vector3(0,0,0)}]}();let E,p,h,v=null,u=!1;function f(e){l.set(e.clientX,e.clientY),h=i.enabled,i.enabled=!1,window.addEventListener("pointermove",z,!1),window.addEventListener("pointerup",w,!1)}function w(){setTimeout((()=>u=!1),0),n.domElement.classList.remove("dragging"),i.enabled=h,window.removeEventListener("pointermove",z,!1),window.removeEventListener("pointerup",w,!1)}function y(){p=n.domElement.getBoundingClientRect()}function x(e){if(u||n.lock)return;const t=v;v=null,e&&s.set(e.clientX-p.left,e.clientY-p.top,0);for(let e=0,t=m.length;e<t;e++){s.distanceTo(m[e].position)<m[e].size&&(v=m[e])}t!==v&&T()}function z(e){n.lock||(u||n.domElement.classList.add("dragging"),u=!0,v=null,c.set(e.clientX,e.clientY),a.subVectors(c,l).multiplyScalar(.5),n.lockX||i.rotateLeft(2*Math.PI*a.x/n.domElement.height),n.lockY||i.rotateUp(2*Math.PI*a.y/n.domElement.height),l.copy(c),i.update())}function g(){if(u||!v)return;const e=v.direction.clone(),t=o.position.distanceTo(i.target);e.multiplyScalar(t);const n=performance.now();!function t(){const r=performance.now()-n,s=Math.min(r/400,1);if(o.position.lerp(e,s),i.update(),1!==s)return requestAnimationFrame(t);x()}(),v=null}function b(e,t=10,n="#FF0000"){E.beginPath(),E.arc(e.x,e.y,t,0,2*Math.PI,!1),E.fillStyle=n,E.fill(),E.closePath()}function L(e,t,n=1,i="#FF0000"){E.beginPath(),E.moveTo(e.x,e.y),E.lineTo(t.x,t.y),E.lineWidth=n,E.strokeStyle=i,E.stroke(),E.closePath()}function T(e){e&&E.clearRect(0,0,n.domElement.width,n.domElement.height);for(let e=0,n=m.length;e<n;e++){const n=m[e],i=v===n,o=n.position.z>=-.01?n.color[0]:n.color[1];n.line&&L(d,n.position,n.line,o),b(n.position,n.size,i?"#FFFFFF":o),n.label&&(E.font=[t.fontWeight,t.fontSize,t.fontFamily].join(" "),E.fillStyle=t.fontColor,E.textBaseline="middle",E.textAlign="center",E.fillText(n.label,n.position.x,n.position.y))}}function R(e){const n=e.direction.clone().applyMatrix4(r),i=e.size;e.position.set(n.x*(d.x-i/2-t.padding)+d.x,d.y-n.y*(d.y-i/2-t.padding),n.z)}i.addEventListener("change",this.update),i.addEventListener("start",(()=>this.domElement.classList.add("inactive"))),i.addEventListener("end",(()=>this.domElement.classList.remove("inactive"))),this.domElement=function(){const e=document.createElement("canvas");return e.width=t.size,e.height=t.size,e.classList.add(t.className),e.addEventListener("pointerdown",f,!1),e.addEventListener("pointerenter",y,!1),e.addEventListener("pointermove",x,!1),e.addEventListener("click",g,!1),E=e.getContext("2d"),e}(),this.update()}}