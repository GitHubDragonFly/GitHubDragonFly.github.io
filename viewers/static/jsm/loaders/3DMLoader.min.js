import{BufferAttribute,BufferGeometryLoader,CanvasTexture,ClampToEdgeWrapping,Color,DirectionalLight,DoubleSide,FileLoader,LinearFilter,Line,LineBasicMaterial,Loader,Matrix4,Mesh,MeshPhysicalMaterial,MeshStandardMaterial,Object3D,PointLight,Points,PointsMaterial,RectAreaLight,RepeatWrapping,SpotLight,Sprite,SpriteMaterial,TextureLoader,Vector2}from"three";import{EXRLoader}from"https://cdn.jsdelivr.net/npm/three@0.164.0/examples/jsm/loaders/EXRLoader.min.js";const _taskCache=new WeakMap;class Rhino3dmLoader extends Loader{constructor(e){super(e),this.libraryPath="",this.libraryPending=null,this.libraryBinary=null,this.libraryConfig={},this.url="",this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.workerConfig={},this.materials=[],this.warnings=[],this.materialArray=[],this.lastIndex=0}setLibraryPath(e){return this.libraryPath=e,this}setWorkerLimit(e){return this.workerLimit=e,this}load(e,t,r,s){const a=new FileLoader(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),this.url=e,a.load(e,(r=>{if(_taskCache.has(r)){return _taskCache.get(r).promise.then(t).catch(s)}this.decodeObjects(r,e).then((e=>{e.userData.warnings=this.warnings,t(e)})).catch((e=>{if(!s)throw new Error("THREE.Rhino3dmLoader: Error decoding objects!\n"+e);s(e)}))}),r,s)}debug(){}decodeObjects(e,t){let r,s;const a=e.byteLength,o=this._getWorker(a).then((t=>(r=t,s=this.workerNextTaskID++,new Promise(((t,a)=>{r._callbacks[s]={resolve:t,reject:a},r.postMessage({type:"decode",id:s,buffer:e},[e])}))))).then((e=>this._createGeometry(e.data))).catch((e=>{throw e}));return o.catch((()=>!0)).then((()=>{r&&s&&this._releaseTask(r,s)})),_taskCache.set(e,{url:t,promise:o}),o}parse(e,t,r){this.decodeObjects(e,"").then((e=>{e.userData.warnings=this.warnings,t(e)})).catch((e=>r(e)))}_compareMaterials(e){const t={};t.name=e.name,t.color={},e.color.r>1||e.color.g>1||e.color.b>1?(t.color.r=e.color.r/255,t.color.g=e.color.g/255,t.color.b=e.color.b/255):(t.color.r=e.color.r,t.color.g=e.color.g,t.color.b=e.color.b),t.type=e.type,t.vertexColors=e.vertexColors;const r=JSON.stringify(t);for(let e=0;e<this.materials.length;e++){const t=this.materials[e],s={};if(s.name=t.name,s.color={},t.color.r>1||t.color.g>1||t.color.b>1?(s.color.r=t.color.r/255,s.color.g=t.color.g/255,s.color.b=t.color.b/255):(s.color.r=t.color.r,s.color.g=t.color.g,s.color.b=t.color.b),s.type=t.type,s.vertexColors=t.vertexColors,JSON.stringify(s)===r)return t}return this.materials.push(e),e}_createMaterial(e,t,r,s){if(!e)return new MeshStandardMaterial({color:new Color(1,1,1),name:Loader.DEFAULT_MATERIAL_NAME,side:DoubleSide,metalness:.8});let a,o,n;a=e.diffuseColor.r>1||e.diffuseColor.g>1||e.diffuseColor.b>1?new Color(e.diffuseColor.r/255,e.diffuseColor.g/255,e.diffuseColor.b/255):new Color(e.diffuseColor.r,e.diffuseColor.g,e.diffuseColor.b),o=e.emissionColor.r>1||e.emissionColor.g>1||e.emissionColor.b>1?new Color(e.emissionColor.r/255,e.emissionColor.g/255,e.emissionColor.b/255):new Color(e.emissionColor.r,e.emissionColor.g,e.emissionColor.b),n=e.specularColor.r>1||e.specularColor.g>1||e.specularColor.b>1?new Color(e.specularColor.r/255,e.specularColor.g/255,e.specularColor.b/255):new Color(e.specularColor.r,e.specularColor.g,e.specularColor.b);const i=new MeshPhysicalMaterial({color:a,emissive:o,flatShading:e.disableLighting,ior:e.indexOfRefraction,name:e.name,reflectivity:e.reflectivity,opacity:1-e.transparency,specularColor:n,transparent:e.transparency>0});if(i.userData.id=e.id,e.pbrSupported){const t=e.pbr;i.anisotropy=t.anisotropic,i.anisotropyRotation=t.anisotropicRotation,t.baseColor.r>1||t.baseColor.g>1||t.baseColor.b>1?i.color=new Color(t.baseColor.r/255,t.baseColor.g/255,t.baseColor.b/255):i.color=new Color(t.baseColor.r,t.baseColor.g,t.baseColor.b),i.clearcoat=t.clearcoat,i.clearcoatRoughness=t.clearcoatRoughness,i.metalness=t.metallic,i.transmission=1-t.opacity,i.roughness=t.roughness,i.sheen=t.sheen,i.specularIntensity=t.specular,i.thickness=t.subsurface,i.thickness&&i.thickness>0&&(i.transmission&&i.transmission>0?i.thickness<1?i.thickness*=140:i.thickness*=11:i.thickness<1?i.thickness*=210:i.thickness*=17)}if(e.pbrSupported&&0===e.pbr.opacity&&1===e.transparency&&(i.opacity=.2,i.transmission=1),r.userStrings&&r.userStrings.some((t=>t[0]==="params_"+e.id)))for(const t of r.userStrings)if(t[0]==="params_"+e.id){let e=JSON.parse(t[1]);e.isArrayMember&&(i.userStrings||(i.userStrings={}),i.userStrings.isArrayMember=!0),i.side=e.side,void 0!==e.alphaTest&&(i.alphaTest=e.alphaTest),void 0!==e.bumpScale&&(i.bumpScale=e.bumpScale),void 0!==e.depthTest&&(i.depthTest=e.depthTest),void 0!==e.normalMapType&&(i.normalMapType=e.normalMapType),void 0!==e.emissiveIntensity&&(i.emissiveIntensity=e.emissiveIntensity),void 0!==e.normalScaleX&&(i.normalScale.x=e.normalScaleX),void 0!==e.normalScaleY&&(i.normalScale.y=e.normalScaleY),void 0!==e.clearcoatNormalScaleX&&(i.clearcoatNormalScale.x=e.clearcoatNormalScaleX),void 0!==e.clearcoatNormalScaleY&&(i.clearcoatNormalScale.y=e.clearcoatNormalScaleY),void 0!==e.iridescence&&(i.iridescence=e.iridescence),void 0!==e.iridescenceIOR&&(i.iridescenceIOR=e.iridescenceIOR),void 0!==e.iridescenceThicknessRangeX&&(i.iridescenceThicknessRange[0]=e.iridescenceThicknessRangeX),void 0!==e.iridescenceThicknessRangeY&&(i.iridescenceThicknessRange[1]=e.iridescenceThicknessRangeY),void 0!==e.sheenRoughness&&(i.sheenRoughness=e.sheenRoughness),void 0!==e.sheenColorR&&void 0!==e.sheenColorG&&void 0!==e.sheenColorB&&(e.sheenColorR>1||e.sheenColorG>1||e.sheenColorB>1?i.sheenColor=new Color(e.sheenColorR/255,e.sheenColorG/255,e.sheenColorB/255):i.sheenColor=new Color(e.sheenColorR,e.sheenColorG,e.sheenColorB)),void 0!==e.attenuationDistance&&(i.attenuationDistance=e.attenuationDistance),void 0!==e.attenuationColorR&&void 0!==e.attenuationColorG&&void 0!==e.attenuationColorB&&(e.attenuationColorR>1||e.attenuationColorG>1||e.attenuationColorB>1?i.attenuationColor=new Color(e.attenuationColorR/255,e.attenuationColorG/255,e.attenuationColorB/255):i.attenuationColor=new Color(e.attenuationColorR,e.attenuationColorG,e.attenuationColorB))}const l=new TextureLoader;if(r.userStrings&&r.userStrings.some((t=>t[0].startsWith(e.id)))){for(const t of r.userStrings){let r,a;if(t[0].startsWith(e.id)&&(r=JSON.parse(t[1]),s&&s[r.uuid]&&(a=s[r.uuid]),void 0!==a)){const e=l.load(a);switch(e.name=r.type,r.type){case"Bump":i.bumpMap=e;break;case"Diffuse":i.map=e;break;case"Emap":i.envMap=e;break;case"Opacity":i.transmissionMap=e;break;case"Transparency":i.alphaMap=e,i.transparent=!0;break;case"PBR_Alpha":i.alphaMap=e,i.transparent=!0;break;case"PBR_AmbientOcclusion":i.aoMap=e;break;case"PBR_Anisotropic":i.anisotropyMap=e;break;case"PBR_BaseColor":i.map=e;break;case"PBR_Clearcoat":i.clearcoatMap=e;break;case"PBR_ClearcoatBump":i.clearcoatNormalMap=e;break;case"PBR_ClearcoatRoughness":i.clearcoatRoughnessMap=e;break;case"PBR_Displacement":i.displacementMap=e;break;case"PBR_Emission":i.emissiveMap=e;break;case"PBR_Metallic":i.metalnessMap=e;break;case"PBR_Roughness":i.roughnessMap=e;break;case"PBR_Sheen":i.sheenColorMap=e;break;case"PBR_Specular":i.specularColorMap=e;break;case"PBR_Subsurface":i.thicknessMap=e;break;case"PBR_Other_Anisotropy":i.anisotropyMap=e;break;case"PBR_Other_Iridescence":i.iridescenceMap=e;break;case"PBR_Other_IridescenceThickness":i.iridescenceThicknessMap=e;break;case"PBR_Other_Normal":i.normalMap=e;break;case"PBR_Other_SheenColor":i.sheenColorMap=e;break;case"PBR_Other_SheenRoughness":i.sheenRoughnessMap=e;break;case"PBR_Other_SpecularIntensity":i.specularIntensityMap=e;break;default:this.warnings.push({message:`THREE.3DMLoader: No conversion exists for 3dm ${r.type}.`,type:"no conversion"});break}void 0!==r.flipY&&(e.flipY=r.flipY),void 0!==r.mapping&&(e.mapping=r.mapping),void 0!==r.minFilter&&(e.minFilter=r.minFilter),void 0!==r.magFilter&&(e.magFilter=r.magFilter),void 0!==r.rotation&&(e.rotation=r.rotation),void 0!==r.wrapU&&(e.wrapS=0===r.wrapU?RepeatWrapping:ClampToEdgeWrapping),void 0!==r.wrapV&&(e.wrapT=0===r.wrapV?RepeatWrapping:ClampToEdgeWrapping),void 0!==r.offset&&(e.offset=new Vector2(r.offset.x,r.offset.y)),void 0!==r.repeat&&(e.repeat=new Vector2(r.repeat.x,r.repeat.y))}}i.transmission&&i.transmission>0&&(void 0!==i.metalnessMap&&void 0===i.metalness&&(i.metalness=.01),void 0!==i.roughnessMap&&void 0===i.roughness&&(i.roughness=.01),void 0!==i.roughnessMap&&1===i.roughness&&(i.roughness=.95),void 0===i.metalnessMap&&void 0===i.roughnessMap&&(void 0!==i.metalness||void 0!==i.roughness&&1!==i.roughness||(i.roughness=.01)))}else for(let t=0;t<e.textures.length;t++){const r=e.textures[t];if(null!==r.image){const e=l.load(r.image);switch(r.type){case"Bump":i.bumpMap=e;break;case"Diffuse":i.map=e;break;case"Emap":i.envMap=e;break;case"Opacity":i.transmissionMap=e;break;case"Transparency":i.alphaMap=e,i.transparent=!0;break;case"PBR_Alpha":i.alphaMap=e,i.transparent=!0;break;case"PBR_AmbientOcclusion":i.aoMap=e;break;case"PBR_Anisotropic":i.anisotropyMap=e;break;case"PBR_BaseColor":i.map=e;break;case"PBR_Clearcoat":i.clearcoatMap=e;break;case"PBR_ClearcoatBump":i.clearcoatNormalMap=e;break;case"PBR_ClearcoatRoughness":i.clearcoatRoughnessMap=e;break;case"PBR_Displacement":i.displacementMap=e;break;case"PBR_Emission":i.emissiveMap=e;break;case"PBR_Metallic":i.metalnessMap=e;break;case"PBR_Roughness":i.roughnessMap=e;break;case"PBR_Sheen":i.sheenColorMap=e;break;case"PBR_Specular":i.specularColorMap=e;break;case"PBR_Subsurface":i.thicknessMap=e;break;default:this.warnings.push({message:`THREE.3DMLoader: No conversion exists for 3dm ${r.type}.`,type:"no conversion"});break}void 0!==r.flipY&&(e.flipY=r.flipY),void 0!==r.mapping&&(e.mapping=r.mapping),void 0!==r.minFilter&&(e.minFilter=r.minFilter),void 0!==r.magFilter&&(e.magFilter=r.magFilter),void 0!==r.rotation&&(e.rotation=r.rotation),void 0!==r.wrapU&&(e.wrapS=0===r.wrapU?RepeatWrapping:ClampToEdgeWrapping),void 0!==r.wrapV&&(e.wrapT=0===r.wrapV?RepeatWrapping:ClampToEdgeWrapping),void 0!==r.offset&&e.offset.set(r.offset.x,r.offset.y),void 0!==r.repeat&&e.repeat.set(r.repeat.x,r.repeat.y)}}return t&&(new EXRLoader).load(t.image,(function(e){e.mapping=THREE.EquirectangularReflectionMapping,i.envMap=e})),i}_createGeometry(e){const t=new Object3D,r=[],s=[],a=[];t.userData.strings=e.strings,t.userData.layers=e.layers,t.userData.groups=e.groups,t.userData.settings=e.settings,t.userData.settings.renderSettings=e.renderSettings,t.userData.objectType="File3dm",t.userData.materials=null,t.name=this.url;let o=e.objects;const n=e.strings,i={};if(n&&n.length>0)for(const e of n)i[e[0]]=e[1];const l=e.materials;for(let n=0;n<o.length;n++){const c=o[n],p=c.attributes;switch(c.objectType){case"InstanceDefinition":s.push(c);break;case"InstanceReference":a.push(c);break;default:let o=null;switch(p.materialSource.name){case"ObjectMaterialSource_MaterialFromLayer":p.layerIndex>=0&&(o=e.layers[p.layerIndex].renderMaterialIndex);break;case"ObjectMaterialSource_MaterialFromObject":p.materialIndex>=0&&(o=p.materialIndex);break}let n=null;if(o>=0){const t=l[o];n=this._createMaterial(t,e.renderEnvironment,p,i)}const d=this._createObject(c,n,l,e.renderEnvironment,i);if(void 0===d)continue;const u=e.layers[p.layerIndex];d.visible=!u||e.layers[p.layerIndex].visible,p.isInstanceDefinitionObject?r.push(d):t.add(d);break}}for(let e=0;e<s.length;e++){const n=s[e];o=[];for(let e=0;e<n.attributes.objectIds.length;e++){const t=n.attributes.objectIds[e];for(let e=0;e<r.length;e++){t===r[e].userData.attributes.id&&o.push(r[e])}}for(let e=0;e<a.length;e++){const r=a[e];if(r.geometry.parentIdefId===n.attributes.id){const e=new Object3D,s=r.geometry.xform.array,a=new Matrix4;a.set(...s),e.applyMatrix4(a);for(let t=0;t<o.length;t++)e.add(o[t].clone(!0));t.add(e)}}}return t.userData.materials=this.materials,t.name="",t}_createObject(e,t,r,s,a){this.materialArray=[];const o=new BufferGeometryLoader,n=e.attributes;let i,l,c,p,d=!1;switch(e.objectType){case"Point":case"PointSet":i=o.parse(e.geometry),i.attributes.hasOwnProperty("color")?l=new PointsMaterial({vertexColors:!0,sizeAttenuation:!1,size:2}):(c=n.plotColor,p=c.r>1||c.g>1||c.b>1?new Color(c.r/255,c.g/255,c.b/255):new Color(c.r,c.g,c.b),l=new PointsMaterial({vertexColors:!1,color:p,sizeAttenuation:!1,size:2})),l=this._compareMaterials(l);const u=new Points(i,l);return u.userData.attributes=n,u.userData.objectType=e.objectType,n.name&&(u.name=n.name),u;case"Mesh":case"Extrusion":case"SubD":case"Brep":if(null===e.geometry)return;if(i=o.parse(e.geometry),n.userStrings&&"geometry_groups"===n.userStrings[0][0]&&(i.groups=JSON.parse(n.userStrings[0][1])),null===t&&(t=this._createMaterial()),i.attributes.hasOwnProperty("color")&&(d=!0),t.userStrings&&t.userStrings.isArrayMember){if(n.userStrings)if(i.groups){for(const e of i.groups){let t=this._createMaterial(r[this.lastIndex+e.materialIndex],s,n,a);t.vertexColors=d,this.materialArray.push(t)}this.lastIndex+=i.groups.length}else for(let e=0;e<n.userStrings.length;e++){let t=this._createMaterial(r[e],s,n,a);t.vertexColors=d,this.materialArray.push(t)}}else t.vertexColors=d,t=this._compareMaterials(t);const g=this.materialArray.length>0?new Mesh(i,this.materialArray):new Mesh(i,t);return g.castShadow=n.castsShadows,g.receiveShadow=n.receivesShadows,g.userData.attributes=n,g.userData.objectType=e.objectType,n.name&&(g.name=n.name),g;case"Curve":if(i=o.parse(e.geometry),n.userStrings&&n.userStrings.some((e=>"colors"===e[0]))){for(const e of n.userStrings)if("colors"===e[0]){const t=e[1].split(",").map(Number);for(let e=0;e<t.length;e+=3)p=new Color(t[e]/255,t[e+1]/255,t[e+2]/255),t[e]=p.r,t[e+1]=p.g,t[e+2]=p.b;i.setAttribute("color",new BufferAttribute(new Float32Array(t),3))}l=new LineBasicMaterial({vertexColors:!0})}else c=n.plotColor,p=c.r>1||c.g>1||c.b>1?new Color(c.r/255,c.g/255,c.b/255):new Color(c.r,c.g,c.b),l=new LineBasicMaterial({color:p});l=this._compareMaterials(l);const h=new Line(i,l);return h.userData.attributes=n,h.userData.objectType=e.objectType,n.name&&(h.name=n.name),h;case"TextDot":i=e.geometry;const m=document.createElement("canvas").getContext("2d"),b=`${i.fontHeight}px ${i.fontFace}`;m.font=b;const y=m.measureText(i.text).width+10,f=i.fontHeight+10,w=window.devicePixelRatio;m.canvas.width=y*w,m.canvas.height=f*w,m.canvas.style.width=y+"px",m.canvas.style.height=f+"px",m.setTransform(w,0,0,w,0,0),m.font=b,m.textBaseline="middle",m.textAlign="center",p=n.plotColor,m.fillStyle=`rgba(${p.r},${p.g},${p.b},${p.a})`,m.fillRect(0,0,y,f),m.fillStyle="white",m.fillText(i.text,y/2,f/2);const C=new CanvasTexture(m.canvas);C.minFilter=LinearFilter,C.wrapS=ClampToEdgeWrapping,C.wrapT=ClampToEdgeWrapping,l=new SpriteMaterial({map:C,depthTest:!1});const S=new Sprite(l);return S.position.set(i.point[0],i.point[1],i.point[2]),S.scale.set(y/10,f/10,1),S.userData.attributes=n,S.userData.objectType=e.objectType,n.name&&(S.name=n.name),S;case"Light":let k;switch(i=e.geometry,i.lightStyle.name){case"LightStyle_WorldPoint":k=new PointLight,k.castShadow=n.castsShadows,k.position.set(i.location[0],i.location[1],i.location[2]),k.shadow.normalBias=.1;break;case"LightStyle_WorldSpot":k=new SpotLight,k.castShadow=n.castsShadows,k.position.set(i.location[0],i.location[1],i.location[2]),k.target.position.set(i.direction[0],i.direction[1],i.direction[2]),k.angle=i.spotAngleRadians,k.shadow.normalBias=.1;break;case"LightStyle_WorldRectangular":k=new RectAreaLight;const e=Math.abs(i.width[2]),t=Math.abs(i.length[0]);k.position.set(i.location[0]-t/2,i.location[1],i.location[2]-e/2),k.height=t,k.width=e,k.lookAt(i.direction[0],i.direction[1],i.direction[2]);break;case"LightStyle_WorldDirectional":k=new DirectionalLight,k.castShadow=n.castsShadows,k.position.set(i.location[0],i.location[1],i.location[2]),k.target.position.set(i.direction[0],i.direction[1],i.direction[2]),k.shadow.normalBias=.1;break;case"LightStyle_WorldLinear":break;default:break}return k&&(k.intensity=i.intensity,c=i.diffuse,p=c.r>1||c.g>1||c.b>1?new Color(c.r/255,c.g/255,c.b/255):new Color(c.r,c.g,c.b),k.color=p,k.userData.attributes=n,k.userData.objectType=e.objectType),k}}_initLibrary(){if(!this.libraryPending){const e=new FileLoader(this.manager);e.setPath(this.libraryPath);const t=new Promise(((t,r)=>{e.load("rhino3dm.js",t,void 0,r)})),r=new FileLoader(this.manager);r.setPath(this.libraryPath),r.setResponseType("arraybuffer");const s=new Promise(((e,t)=>{r.load("rhino3dm.wasm",e,void 0,t)}));this.libraryPending=Promise.all([t,s]).then((([e,t])=>{this.libraryConfig.wasmBinary=t;const r=Rhino3dmWorker.toString(),s=["/* rhino3dm.js */",e,"/* worker */",r.substring(r.indexOf("{")+1,r.lastIndexOf("}"))].join("\n");this.workerSourceURL=URL.createObjectURL(new Blob([s]))}))}return this.libraryPending}_getWorker(e){return this._initLibrary().then((()=>{if(this.workerPool.length<this.workerLimit){const e=new Worker(this.workerSourceURL);e._callbacks={},e._taskCosts={},e._taskLoad=0,e.postMessage({type:"init",libraryConfig:this.libraryConfig}),e.onmessage=t=>{const r=t.data;switch(r.type){case"warning":this.warnings.push(r.data);break;case"decode":e._callbacks[r.id].resolve(r);break;case"error":e._callbacks[r.id].reject(r);break;default:}},this.workerPool.push(e)}else this.workerPool.sort((function(e,t){return e._taskLoad>t._taskLoad?-1:1}));const t=this.workerPool[this.workerPool.length-1];return t._taskLoad+=e,t}))}_releaseTask(e,t){e._taskLoad-=e._taskCosts[t],delete e._callbacks[t],delete e._taskCosts[t]}dispose(){for(let e=0;e<this.workerPool.length;++e)this.workerPool[e].terminate();return this.workerPool.length=0,this}}function Rhino3dmWorker(){let e,t,r,s;function a(e,t,r){const s=[];for(let a=0;a<t.length;a++){const n=e.getTexture(t[a]);if(n){let e=t[a].constructor.name;e=e.substring(12,e.length);const i=o(n,e,r);s.push(i),n.delete()}}return s}function o(e,t,r){const a={type:t},o=r.getEmbeddedFileAsBase64(e.fileName);a.wrapU=e.wrapU,a.wrapV=e.wrapV,a.wrapW=e.wrapW;const n=e.uvwTransform.toFloatArray(!0);return a.repeat=[n[0],n[5]],o?a.image="data:image/png;base64,"+o:(self.postMessage({type:"warning",id:s,data:{message:`THREE.3DMLoader: Image for ${t} texture not embedded in file.`,type:"missing resource"}}),a.image=null),a}function n(e,t){const a=e.geometry(),o=e.attributes();let n,c,p,d,u,g=a.objectType;switch(g){case r.ObjectType.Curve:const e=l(a,100);p={},c={},d={},p.itemSize=3,p.type="Float32Array",p.array=[];for(let t=0;t<e.length;t++)p.array.push(e[t][0]),p.array.push(e[t][1]),p.array.push(e[t][2]);c.position=p,d.attributes=c,n={data:d};break;case r.ObjectType.Point:const h=a.location;p={};const m={};c={},d={},p.itemSize=3,p.type="Float32Array",p.array=[h[0],h[1],h[2]];const b=o.drawColor(t);m.itemSize=3,m.type="Float32Array",m.array=[b.r/255,b.g/255,b.b/255],c.position=p,c.color=m,d.attributes=c,n={data:d};break;case r.ObjectType.PointSet:case r.ObjectType.Mesh:n=a.toThreejsJSON();break;case r.ObjectType.Brep:const y=a.faces();u=new r.Mesh;for(let e=0;e<y.count;e++){const t=y.get(e),s=t.getMesh(r.MeshType.Any);s&&(u.append(s),s.delete()),t.delete()}u.faces().count>0&&(u.compact(),n=u.toThreejsJSON(),y.delete()),u.delete();break;case r.ObjectType.Extrusion:u=a.getMesh(r.MeshType.Any),u&&(n=u.toThreejsJSON(),u.delete());break;case r.ObjectType.TextDot:n=i(a);break;case r.ObjectType.Light:n=i(a),"LightStyle_WorldLinear"===n.lightStyle.name&&self.postMessage({type:"warning",id:s,data:{message:`THREE.3DMLoader: No conversion exists for ${g.constructor.name} ${n.lightStyle.name}`,type:"no conversion",guid:o.id}});break;case r.ObjectType.InstanceReference:n=i(a),n.xform=i(a.xform),n.xform.array=a.xform.toFloatArray(!0);break;case r.ObjectType.SubD:a.subdivide(3),u=r.Mesh.createFromSubDControlNet(a,!1),u&&(n=u.toThreejsJSON(),u.delete());break;default:self.postMessage({type:"warning",id:s,data:{message:`THREE.3DMLoader: Conversion not implemented for ${g.constructor.name}`,type:"not implemented",guid:o.id}});break}if(n)return c=i(o),c.geometry=i(a),o.groupCount>0&&(c.groupIds=o.getGroupList()),o.userStringCount>0&&(c.userStrings=o.getUserStrings()),a.userStringCount>0&&(c.geometry.userStrings=a.getUserStrings()),o.decals().count>0&&self.postMessage({type:"warning",id:s,data:{message:"THREE.3DMLoader: No conversion exists for the decals associated with this object.",type:"no conversion",guid:o.id}}),c.drawColor=o.drawColor(t),g=g.constructor.name,g=g.substring(11,g.length),{geometry:n,attributes:c,objectType:g};self.postMessage({type:"warning",id:s,data:{message:`THREE.3DMLoader: ${g.constructor.name} has no associated mesh geometry.`,type:"missing mesh",guid:o.id}})}function i(e){const t={};for(const r in e){const s=e[r];"function"!=typeof s&&("object"==typeof s&&null!==s&&s.hasOwnProperty("constructor")?t[r]={name:s.constructor.name,value:s.value}:t[r]="object"==typeof s&&null!==s?i(s):s)}return t}function l(e,t){let s=t,a=[];const o=[];if(e instanceof r.LineCurve)return[e.pointAtStart,e.pointAtEnd];if(e instanceof r.PolylineCurve){s=e.pointCount;for(let t=0;t<s;t++)a.push(e.point(t));return a}if(e instanceof r.PolyCurve){const t=e.segmentCount;for(let r=0;r<t;r++){const t=e.segmentCurve(r),o=l(t,s);a=a.concat(o),t.delete()}return a}if(e instanceof r.ArcCurve&&(s=Math.floor(e.angleDegrees/5),s=s<2?2:s),e instanceof r.NurbsCurve&&1===e.degree){const t=e.tryGetPolyline();for(let e=0;e<t.count;e++)a.push(t.get(e));return t.delete(),a}const n=e.domain,i=s-1;for(let t=0;t<s;t++){const r=n[0]+t/i*(n[1]-n[0]);if(r===n[0]||r===n[1]){o.push(r);continue}const s=e.tangentAt(r),a=e.tangentAt(o.slice(-1)[0]),l=s[0]*s[0]+s[1]*s[1]+s[2]*s[2],c=a[0]*a[0]+a[1]*a[1]+a[2]*a[2],p=Math.sqrt(l*c);let d;if(0===p)d=Math.PI/2;else{const e=(s.x*a.x+s.y*a.y+s.z*a.z)/p;d=Math.acos(Math.max(-1,Math.min(1,e)))}d<.1||o.push(r)}return a=o.map((t=>e.pointAt(t))),a}onmessage=function(o){const l=o.data;switch(l.type){case"init":t=l.libraryConfig;const o=t.wasmBinary;let c;e=new Promise((function(e){c={wasmBinary:o,onRuntimeInitialized:e},rhino3dm(c)})).then((()=>{r=c}));break;case"decode":s=l.id;const p=l.buffer;e.then((()=>{try{const e=function(e,t){const r=new Uint8Array(t),s=e.File3dm.fromByteArray(r),o=[],l=[],c=[],p=[],d=[],u=[],g=[],h=s.objects(),m=h.count;for(let e=0;e<m;e++){const t=h.get(e),r=n(t,s);t.delete(),r&&o.push(r)}for(let e=0;e<s.instanceDefinitions().count;e++){const t=s.instanceDefinitions().get(e),r=i(t);r.objectIds=t.getObjectIds(),o.push({geometry:null,attributes:r,objectType:"InstanceDefinition"})}const b=[e.TextureType.Diffuse,e.TextureType.Bump,e.TextureType.Transparency,e.TextureType.Opacity,e.TextureType.Emap],y=[e.TextureType.PBR_BaseColor,e.TextureType.PBR_Subsurface,e.TextureType.PBR_SubsurfaceScattering,e.TextureType.PBR_SubsurfaceScatteringRadius,e.TextureType.PBR_Metallic,e.TextureType.PBR_Specular,e.TextureType.PBR_SpecularTint,e.TextureType.PBR_Roughness,e.TextureType.PBR_Anisotropic,e.TextureType.PBR_Anisotropic_Rotation,e.TextureType.PBR_Sheen,e.TextureType.PBR_SheenTint,e.TextureType.PBR_Clearcoat,e.TextureType.PBR_ClearcoatBump,e.TextureType.PBR_ClearcoatRoughness,e.TextureType.PBR_OpacityIor,e.TextureType.PBR_OpacityRoughness,e.TextureType.PBR_Emission,e.TextureType.PBR_AmbientOcclusion,e.TextureType.PBR_Displacement];for(let e=0;e<s.materials().count;e++){const t=s.materials().get(e),r=i(t),o=[];o.push(...a(t,b,s)),r.pbrSupported=t.physicallyBased().supported,r.pbrSupported&&(o.push(...a(t,y,s)),r.pbr=i(t.physicallyBased())),r.textures=o,l.push(r),t.delete()}for(let e=0;e<s.layers().count;e++){const t=s.layers().get(e),r=i(t);c.push(r),t.delete()}for(let e=0;e<s.views().count;e++){const t=s.views().get(e),r=i(t);p.push(r),t.delete()}for(let e=0;e<s.namedViews().count;e++){const t=s.namedViews().get(e),r=i(t);d.push(r),t.delete()}for(let e=0;e<s.groups().count;e++){const t=s.groups().get(e),r=i(t);u.push(r),t.delete()}const f=i(s.settings()),w=s.strings().count;for(let e=0;e<w;e++)g.push(s.strings().get(e));const C=s.settings().renderSettings().renderEnvironments.reflectionId,S=s.renderContent();let k=null;for(let e=0;e<S.count;e++){const t=S.get(e);switch(t.kind){case"environment":if(t.id!==C)break;const e=t.findChild("texture").fileName;for(let t=0;t<s.embeddedFiles().count;t++){if(e===s.embeddedFiles().get(t).fileName){k={type:"renderEnvironment",image:"data:image/png;base64,"+s.getEmbeddedFileAsBase64(e),name:e}}}break}}const T={ambientLight:s.settings().renderSettings().ambientLight,backgroundColorTop:s.settings().renderSettings().backgroundColorTop,backgroundColorBottom:s.settings().renderSettings().backgroundColorBottom,useHiddenLights:s.settings().renderSettings().useHiddenLights,depthCue:s.settings().renderSettings().depthCue,flatShade:s.settings().renderSettings().flatShade,renderBackFaces:s.settings().renderSettings().renderBackFaces,renderPoints:s.settings().renderSettings().renderPoints,renderCurves:s.settings().renderSettings().renderCurves,renderIsoParams:s.settings().renderSettings().renderIsoParams,renderMeshEdges:s.settings().renderSettings().renderMeshEdges,renderAnnotations:s.settings().renderSettings().renderAnnotations,useViewportSize:s.settings().renderSettings().useViewportSize,scaleBackgroundToFit:s.settings().renderSettings().scaleBackgroundToFit,transparentBackground:s.settings().renderSettings().transparentBackground,imageDpi:s.settings().renderSettings().imageDpi,shadowMapLevel:s.settings().renderSettings().shadowMapLevel,namedView:s.settings().renderSettings().namedView,snapShot:s.settings().renderSettings().snapShot,specificViewport:s.settings().renderSettings().specificViewport,groundPlane:i(s.settings().renderSettings().groundPlane),safeFrame:i(s.settings().renderSettings().safeFrame),dithering:i(s.settings().renderSettings().dithering),skylight:i(s.settings().renderSettings().skylight),linearWorkflow:i(s.settings().renderSettings().linearWorkflow),renderChannels:i(s.settings().renderSettings().renderChannels),sun:i(s.settings().renderSettings().sun),renderEnvironments:i(s.settings().renderSettings().renderEnvironments),postEffects:i(s.settings().renderSettings().postEffects)};return s.delete(),{objects:o,materials:l,layers:c,views:p,namedViews:d,groups:u,strings:g,settings:f,renderSettings:T,renderEnvironment:k}}(r,p);self.postMessage({type:"decode",id:l.id,data:e})}catch(e){self.postMessage({type:"error",id:l.id,error:e})}}));break}}}export{Rhino3dmLoader};