import{BufferGeometry,Color,FileLoader,Float32BufferAttribute,Loader}from"three";class XYZLoader extends Loader{load(t,e,r,s){const a=this,o=new FileLoader(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,(function(r){try{e(a.parse(r))}catch(e){s&&s(e),a.manager.itemError(t)}}),r,s)}parse(t){const e=t.split("\n"),r=[],s=[],a=[],o=new Color;for(let t of e)if(t=t.trim(),!t.startsWith("#")&&!t.startsWith("//"))if(t.indexOf(";")>-1){const e=t.split(";");r.push(parseFloat(e[0])||0),r.push(parseFloat(e[1])||0),r.push(parseFloat(e[2])||0)}else{const e=t.split(/\s+/);if(e.length>=3&&(r.push(parseFloat(e[0])||0),r.push(parseFloat(e[1])||0),r.push(parseFloat(e[2])||0)),4===e.length){let t=parseInt(e[3]).toString(16).padEnd(6,"0");const r=parseInt(t.substring(0,2),16)/255,a=parseInt(t.substring(2,4),16)/255,n=parseInt(t.substring(4,6),16)/255;o.setRGB(r,a,n).convertSRGBToLinear(),s.push(o.r,o.g,o.b)}if(e.length>=6){const t=parseFloat(e[3])/255,r=parseFloat(e[4])/255,a=parseFloat(e[5])/255;o.setRGB(t,r,a).convertSRGBToLinear(),s.push(o.r,o.g,o.b)}e.length>=9&&(a.push(parseFloat(e[6])),a.push(parseFloat(e[7])),a.push(parseFloat(e[8])))}const n=new BufferGeometry;return n.setAttribute("position",new Float32BufferAttribute(r,3)),s.length>0&&n.setAttribute("color",new Float32BufferAttribute(s,3)),a.length>0&&n.setAttribute("normal",new THREE.Float32BufferAttribute(a,3)),n}}export{XYZLoader};