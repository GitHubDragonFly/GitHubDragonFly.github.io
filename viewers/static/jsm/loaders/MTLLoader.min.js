import{Color,DefaultLoadingManager,FileLoader,FrontSide,Loader,LoaderUtils,MeshPhongMaterial,MeshPhysicalMaterial,RepeatWrapping,Texture,TextureLoader,Vector2}from"three";class MTLLoader extends Loader{constructor(a){super(a)}load(a,e,s,r){const t=this,o=""===this.path?LoaderUtils.extractUrlBase(a):this.path,i=new FileLoader(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials),i.load(a,(function(s){try{e(t.parse(s,o))}catch(e){r&&r(e),t.manager.itemError(a)}}),s,r)}setMaterialOptions(a){return this.materialOptions=a,this}parse(a,e){const s=a.split("\n");let r={};const t=/\s+/,o={};for(let a=0;a<s.length;a++){let e=s[a];if(e=e.trim(),0===e.length||"#"===e.charAt(0))continue;const i=e.indexOf(" ");let n=i>=0?e.substring(0,i):e;n=n.toLowerCase();let p=i>=0?e.substring(i+1):"";if(p=p.trim(),"newmtl"===n)r={name:p},o[p]=r;else if("ka"===n||"kd"===n||"ks"===n||"ke"===n){const a=p.split(t,3);r[n]=[parseFloat(a[0]),parseFloat(a[1]),parseFloat(a[2])]}else r[n]=p}const i=new MaterialCreator(this.resourcePath||e,this.materialOptions);return i.setCrossOrigin(this.crossOrigin),i.setManager(this.manager),i.setMaterials(o),i}}class MaterialCreator{constructor(a="",e={}){this.baseUrl=a,this.options=e,this.originalMaterialsInfo={},this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.crossOrigin="anonymous",this.side=void 0!==this.options.side?this.options.side:FrontSide,this.wrap=void 0!==this.options.wrap?this.options.wrap:RepeatWrapping}setCrossOrigin(a){return this.crossOrigin=a,this}setManager(a){this.manager=a}setMaterials(a){this.originalMaterialsInfo=a,this.materialsInfo=this.convert(a),this.materials={},this.materialsArray=[],this.nameLookup={}}convert(a){if(!this.options)return a;const e={};for(const s in a){const r=a[s],t={};e[s]=t;for(const a in r){let e=!0,s=r[a];const o=a.toLowerCase();switch(o){case"kd":case"ka":case"ke":case"ks":this.options&&this.options.normalizeRGB&&(s=[s[0]/255,s[1]/255,s[2]/255]),this.options&&this.options.ignoreZeroRGBs&&0===s[0]&&0===s[1]&&0===s[2]&&(e=!1);break;default:break}e&&(t[o]=s)}}return e}preload(){for(const a in this.materialsInfo)this.create(a)}getIndex(a){return this.nameLookup[a]}getAsArray(){let a=0;for(const e in this.materialsInfo)this.materialsArray[a]=this.create(e),this.nameLookup[e]=a,a++;return this.materialsArray}create(a){return void 0===this.materials[a]&&this.createMaterial_(a),this.materials[a]}createMaterial_(a){const e=this,s=this.materialsInfo[a],r=this.originalMaterialsInfo[a],t={name:a,side:this.side};function o(s,o,i){if(o=o.substring(o.lastIndexOf(" ")+1),t[s])return;const n=e.getTextureParams(r[i]),p=e.loadTexture((c=e.baseUrl,"string"!=typeof(l=o)||""===l?"":/^https?:\/\//i.test(l)?l:c+l),void 0,a);var c,l;p.repeat.copy(n.scale),p.offset.copy(n.offset),p.center.copy(n.center),p.rotation=n.rotation,p.channel=n.channel||0,p.wrapS=n.wrapS,p.wrapT=n.wrapT,t[s]=p}let i,n=!0,p=!1,c=[100,400];for(const a in s){const e=s[a];let r;if(""===e)continue;const l=a.toLowerCase();switch(l){case"ka":t.aoMapIntensity=parseFloat(e[0]);break;case"kd":t.color=(new Color).fromArray(e);break;case"ks":t.specular=(new Color).fromArray(e);break;case"ke":t.emissive=(new Color).fromArray(e);break;case"map_ka":o("aoMap",e,l);break;case"map_kd":o("map",e,l);break;case"map_ks":o("specularMap",e,l);break;case"map_ke":case"map_emissive":o("emissiveMap",e,l);break;case"norm":case"map_kn":o("normalMap",e,l);break;case"bump":case"map_bump":o("bumpMap",e,l);break;case"map_d":o("alphaMap",e,l),t.transparent=!0;break;case"disp":case"map_disp":o("displacementMap",e,l);break;case"disp_b":t.displacementBias=parseFloat(e);break;case"disp_s":t.displacementScale=parseFloat(e);break;case"pli":t.lightMapIntensity=parseFloat(e);break;case"pa":t.anisotropy=parseFloat(e),n=!1;break;case"par":t.anisotropyRotation=parseFloat(e),n=!1;break;case"pad":t.attenuationDistance=parseFloat(e),n=!1;break;case"pac":t.attenuationColor=(new Color).fromArray(e.split(" ").map(Number)),n=!1;break;case"pe":t.emissiveIntensity=parseFloat(e),n=!1;break;case"pm":t.metalness=parseFloat(e),n=!1;break;case"pr":t.roughness=parseFloat(e),n=!1;break;case"pns":t.normalScale=(new Vector2).fromArray(e.split(" ").map(Number));break;case"pcc":t.clearcoat=parseFloat(e),n=!1;break;case"pcr":t.clearcoatRoughness=parseFloat(e),n=!1;break;case"pcn":t.clearcoatNormalScale=(new Vector2).fromArray(e.split(" ").map(Number)),n=!1;break;case"pdt":t.depthTest=1===parseFloat(e);break;case"ni":p=!0,i=parseFloat(e);break;case"pi":t.iridescence=parseFloat(e),n=!1;break;case"pii":t.iridescenceIOR=parseFloat(e),n=!1;break;case"pitx":c[0]=parseFloat(e),n=!1;break;case"pity":c[1]=parseFloat(e),n=!1;break;case"pbr_ps":t.sheen=parseFloat(e),n=!1;break;case"ps":t.sheenColor=(new Color).fromArray(e.split(" ").map(Number)),n=!1;break;case"psr":t.sheenRoughness=parseFloat(e),n=!1;break;case"psp":t.specularColor=(new Color).fromArray(e.split(" ").map(Number)),n=!1;break;case"psi":t.specularIntensity=parseFloat(e),n=!1;break;case"pth":t.thickness=parseFloat(e),n=!1;break;case"ptr":t.transmission=parseFloat(e),n=!1;break;case"s":t.side=parseInt(e);break;case"a":t.alphaTest=parseFloat(e);break;case"prf":t.reflectivity=parseFloat(e);break;case"pbr_pl_map":o("lightMap",e,l);break;case"map_pa":o("anisotropyMap",e,l),n=!1;break;case"map_pm":o("metalnessMap",e,l),n=!1;break;case"map_pr":o("roughnessMap",e,l),n=!1;break;case"map_px":o("metalnessMap",e,l),o("roughnessMap",e,l),n=!1;break;case"map_pcc":o("clearcoatMap",e,l),n=!1;break;case"map_pcn":o("clearcoatNormalMap",e,l),n=!1;break;case"map_pcr":o("clearcoatRoughnessMap",e,l),n=!1;break;case"map_pit":o("iridescenceThicknessMap",e,l),n=!1;break;case"map_pi":o("iridescenceMap",e,l),n=!1;break;case"map_psc":o("sheenColorMap",e,l),n=!1;break;case"map_psr":o("sheenRoughnessMap",e,l),n=!1;break;case"map_psp":o("specularColorMap",e,l),n=!1;break;case"map_psi":o("specularIntensityMap",e,l),n=!1;break;case"map_pth":o("thicknessMap",e,l),n=!1;break;case"map_ptr":o("transmissionMap",e,l),n=!1;break;case"ns":t.shininess=parseFloat(e);break;case"d":r=parseFloat(e),r<1&&(t.opacity=r,t.transparent=!0);break;case"tr":r=parseFloat(e),this.options&&this.options.invertTrProperty&&(r=1-r),r>0&&(t.opacity=1-r,t.transparent=!0);break;default:break}}return!0===n?(!0===p&&(t.refractionRatio=i),this.materials[a]=new MeshPhongMaterial(t)):(!0===p&&(t.ior=i),t.iridescence&&(t.iridescenceThicknessRange=c),t.anisotropy&&t.anisotropyMap&&t.anisotropyRotation?(t.anisotropyMap.mapping=300,t.anisotropyRotation=-Math.asin(t.anisotropyRotation)/t.anisotropy):t.anisotropyMap&&t.anisotropy&&!t.anisotropyRotation?(t.anisotropyMap.mapping=300,t.anisotropyRotation=-Math.PI/3):!t.anisotropyMap&&t.anisotropy&&t.anisotropyRotation&&(t.anisotropyRotation=-t.anisotropyRotation),t.transmission&&t.transmission>0&&(void 0!==t.metalnessMap&&void 0===t.metalness&&(t.metalness=.01),void 0!==t.roughnessMap&&void 0===t.roughness&&(t.roughness=.01),void 0!==t.roughnessMap&&1===t.roughness&&(t.roughness=.95),void 0===t.metalnessMap&&void 0===t.roughnessMap&&(void 0!==t.metalness||void 0!==t.roughness&&1!==t.roughness||(t.roughness=.01))),this.materials[a]=new MeshPhysicalMaterial(t)),this.materials[a]}getTextureParams(a){const e={scale:new Vector2(1,1),offset:new Vector2(0,0),center:new Vector2(0,0),wrapS:RepeatWrapping,wrapT:RepeatWrapping,rotation:0,channel:0},s=a.split(/\s+/);let r;return r=s.indexOf("-imfchan"),r>=0&&(e.channel=parseInt(s[r+1]),s.splice(r,2)),r=s.indexOf("-bm"),r>=0&&(e.bumpScale=parseFloat(s[r+1]),s.splice(r,2)),r=s.indexOf("-r"),r>=0&&(e.rotation=parseFloat(s[r+1]),s.splice(r,2)),r=s.indexOf("-c"),r>=0&&(e.center.set(parseFloat(s[r+1]),parseFloat(s[r+2])),s.splice(r,3)),r=s.indexOf("-s"),r>=0&&(e.scale.set(parseFloat(s[r+1]),parseFloat(s[r+2])),s.splice(r,4)),r=s.indexOf("-o"),r>=0&&(e.offset.set(parseFloat(s[r+1]),parseFloat(s[r+2])),s.splice(r,4)),r=s.indexOf("-w"),r>=0&&(e.wrapS=Number(s[r+1]),e.wrapT=Number(s[r+2]),s.splice(r,3)),e}loadTexture(a){const e=void 0!==this.manager?this.manager:DefaultLoadingManager;let s=e.getHandler(a);null===s&&(s=new TextureLoader(e)),s.setCrossOrigin&&s.setCrossOrigin(this.crossOrigin);const r=s.load(a);return r||(r=new Texture),r}}export{MTLLoader};