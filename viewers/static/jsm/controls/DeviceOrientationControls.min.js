import{Euler,EventDispatcher,MathUtils,Quaternion,Vector3}from"three";const _zee=new Vector3(0,0,1),_euler=new Euler,_q0=new Quaternion,_q1=new Quaternion(.25,0,0,.5),_changeEvent={type:"change"};class DeviceOrientationControls extends EventDispatcher{constructor(e){super(),window.isSecureContext;const n=this,t=new Quaternion;this.object=e,this.object.rotation.reorder("YXZ"),this.enabled=!1,this.deviceOrientation={},this.screenOrientation=0,this.alphaOffset=0;const i=function(e){n.deviceOrientation=e},o=function(){n.screenOrientation=window.screen.orientation.angle||0},r=function(e,n,t,i,o){_euler.set(t,n,-i,"YXZ"),e.setFromEuler(_euler),e.multiply(_q1),e.multiply(_q0.setFromAxisAngle(_zee,o))};this.connect=function(){o(),void 0!==window.DeviceOrientationEvent&&"function"==typeof window.DeviceOrientationEvent.requestPermission?window.DeviceOrientationEvent.requestPermission().then((function(e){"granted"==e&&(window.addEventListener("orientationchange",o),window.addEventListener("deviceorientation",i))})).catch((function(e){})):(window.addEventListener("orientationchange",o),window.addEventListener("deviceorientation",i)),n.enabled=!0},this.disconnect=function(){window.removeEventListener("orientationchange",o),window.removeEventListener("deviceorientation",i),n.screenOrientation=0,r(new Quaternion(-.25,0,0,.5),0,0,0,0),n.enabled=!1},this.update=function(){if(!1===n.enabled)return;const e=n.deviceOrientation;if(e){const i=e.alpha?MathUtils.degToRad(e.alpha)+n.alphaOffset:0,o=e.beta?MathUtils.degToRad(e.beta):0,a=e.gamma?MathUtils.degToRad(e.gamma):0,c=0!==n.screenOrientation?MathUtils.degToRad(n.screenOrientation):0;r(n.object.quaternion,i,o,a,c),8*(1-t.dot(n.object.quaternion))>1e-6&&(t.copy(n.object.quaternion),n.dispatchEvent(_changeEvent))}},this.dispose=function(){n.disconnect()}}}export{DeviceOrientationControls};