import{BufferAttribute,DefaultLoadingManager,InterleavedBufferAttribute,Matrix4}from"three";import{decompress}from"https://cdn.jsdelivr.net/npm/three@0.164.0/examples/jsm/utils/TextureUtils.min.js";import{deinterleaveAttribute}from"https://cdn.jsdelivr.net/npm/three@0.164.0/examples/jsm/utils/BufferGeometryUtils.min.js";import*as rhino3dm from"https://cdn.jsdelivr.net/npm/rhino3dm@8.6.1/rhino3dm.module.min.js";class Rhino3dmExporter{constructor(e){this.manager=e||DefaultLoadingManager}async parse(e,a,t,r={}){const i=this,o=await rhino3dm.default(),s=new o.File3dm,n={vertexColorsCorrection:0,exportLineSegments:!0,map_flip_required:!1,maxTextureSize:1/0};r=Object.assign(n,r);const l=Math.max(0,Math.min(128,r.vertexColorsCorrection)),c=r.exportLineSegments,p=r.map_flip_required,m=r.maxTextureSize;let u,h,d,y,g;const f={};let M=0,b=0;function v(e,a=!1){h=new o.Material,h.default(),e.name&&""!==e.name?h.name=e.name:h.name="material_"+M,e.color&&(h.diffuseColor={r:255*e.color.r,g:255*e.color.g,b:255*e.color.b,a:255},d.drawColor={r:255*e.color.r,g:255*e.color.g,b:255*e.color.b,a:255},d.plotColor={r:255*e.color.r,g:255*e.color.g,b:255*e.color.b,a:255}),e.emissive&&(h.emissionColor={r:255*e.emissive.r,g:255*e.emissive.g,b:255*e.emissive.b,a:255}),e.specular&&(h.specularColor={r:255*e.specular.r,g:255*e.specular.g,b:255*e.specular.b,a:255}),void 0!==e.opacity&&(!0===e.transparent?h.transparency=1===e.opacity?1e-4:1-e.opacity:h.transparency=1-e.opacity),void 0!==e.shininess&&(h.shine=e.shininess),void 0!==e.reflectivity&&(h.reflectivity=e.reflectivity),void 0!==e.flatShading&&(h.disableLighting=e.flatShading),void 0!==e.refractionFactor&&(h.indexOfRefraction=e.refractionFactor),"MeshStandardMaterial"!==e.type&&"MeshPhysicalMaterial"!==e.type||(h.toPhysicallyBased(),void 0!==e.metalness&&(h.physicallyBased().metallic=e.metalness),void 0!==e.roughness&&(h.physicallyBased().roughness=e.roughness),void 0!==e.sheen&&(h.physicallyBased().sheen=e.sheen),void 0!==e.thickness&&(h.physicallyBased().subsurface=e.thickness),void 0!==e.transmission&&(h.physicallyBased().opacity=1-e.transmission),e.color&&(h.physicallyBased().baseColor={r:255*e.color.r,g:255*e.color.g,b:255*e.color.b,a:255}),e.specularColor&&(h.specularColor={r:255*e.specularColor.r,g:255*e.specularColor.g,b:255*e.specularColor.b,a:255}),void 0!==e.specularIntensity&&(h.physicallyBased().specular=e.specularIntensity),void 0!==e.ior&&(h.indexOfRefraction=e.ior),void 0!==e.anisotropy&&(h.physicallyBased().anisotropic=e.anisotropy,void 0!==e.anisotropyRotation&&(h.physicallyBased().anisotropicRotation=e.anisotropyRotation)),void 0!==e.clearcoat&&(h.physicallyBased().clearcoat=e.clearcoat,void 0!==e.clearcoatRoughness&&(h.physicallyBased().clearcoatRoughness=e.clearcoatRoughness))),s.materials().add(h),d.materialSource=o.ObjectMaterialSource.MaterialFromObject,d.materialIndex=M;const t={};function r(e,a){""===e.name&&(e.name=a);let t={};if(t.type=a,t.uuid=e.uuid,e=e.clone(),t.center=e.center,t.offset=e.offset,t.repeat=e.repeat,t.rotation=e.rotation,t.minFilter=e.minFilter,t.magFilter=e.magFilter,t.mapping=e.mapping?e.mapping:300,e.wrapS&&(t.wrapU=1e3===e.wrapS?0:1),e.wrapT&&(t.wrapV=1e3===e.wrapT?0:1),t.image=a,!f[e.uuid]){!0===e.isCompressedTexture&&(e=decompress(e,m));const a=i.imageURLfromTexture(e,!0,m,p);a&&(f[t.uuid]=a)}d.setUserString(s.materials().get(M).id+"_"+a,JSON.stringify(t))}!0===a&&(t.isArrayMember=!0),t.side=e.side,t.depthTest=e.depthTest,void 0!==e.alphaTest&&e.alphaTest>0&&(t.alphaTest=e.alphaTest),void 0!==e.bumpScale&&1!==e.bumpScale&&(t.bumpScale=e.bumpScale),void 0!==e.emissiveIntensity&&1!==e.emissiveIntensity&&(t.emissiveIntensity=e.emissiveIntensity),void 0!==e.normalMapType&&0!==e.normalMapType&&(t.normalMapType=e.normalMapType),void 0!==e.normalScale&&(1!==e.normalScale.x&&(t.normalScaleX=e.normalScale.x),1!==e.normalScale.y&&(t.normalScaleY=e.normalScale.y)),void 0!==e.clearcoatNormalScale&&(1!==e.clearcoatNormalScale.x&&(t.clearcoatNormalScaleX=e.clearcoatNormalScale.x),1!==e.clearcoatNormalScale.y&&(t.clearcoatNormalScaleY=e.clearcoatNormalScale.y)),void 0!==e.iridescence&&(t.iridescence=e.iridescence),void 0!==e.iridescenceIOR&&(t.iridescenceIOR=e.iridescenceIOR),void 0!==e.iridescenceThicknessRange&&(t.iridescenceThicknessRangeX=e.iridescenceThicknessRange[0],t.iridescenceThicknessRangeY=e.iridescenceThicknessRange[1]),e.attenuationDistance&&e.attenuationDistance!==1/0&&(t.attenuationDistance=e.attenuationDistance),e.attenuationColor&&(t.attenuationColorR=255*e.attenuationColor.r,t.attenuationColorG=255*e.attenuationColor.g,t.attenuationColorB=255*e.attenuationColor.b),void 0!==e.sheenRoughness&&(t.sheenRoughness=e.sheenRoughness),e.sheenColor&&(t.sheenColorR=255*e.sheenColor.r,t.sheenColorG=255*e.sheenColor.g,t.sheenColorB=255*e.sheenColor.b),d.setUserString("params_"+s.materials().get(M).id,JSON.stringify(t)),"MeshStandardMaterial"===e.type||"MeshPhysicalMaterial"===e.type?(e.map&&r(e.map,"PBR_BaseColor"),e.aoMap&&r(e.aoMap,"PBR_AmbientOcclusion"),e.alphaMap&&r(e.alphaMap,"PBR_Alpha"),e.bumpMap&&r(e.bumpMap,"Bump"),e.emissiveMap&&r(e.emissiveMap,"PBR_Emission"),e.anisotropyMap&&r(e.anisotropyMap,"PBR_Anisotropic"),e.clearcoatMap&&r(e.clearcoatMap,"PBR_Clearcoat"),e.clearcoatNormalMap&&r(e.clearcoatNormalMap,"PBR_ClearcoatBump"),e.clearcoatRoughnessMap&&r(e.clearcoatRoughnessMap,"PBR_ClearcoatRoughness"),e.displacementMap&&r(e.displacementMap,"PBR_Displacement"),e.metalnessMap&&r(e.metalnessMap,"PBR_Metallic"),e.roughnessMap&&r(e.roughnessMap,"PBR_Roughness"),e.sheenColorMap&&r(e.sheenColorMap,"PBR_Sheen"),e.specularColorMap&&r(e.specularColorMap,"PBR_Specular"),e.transmissionMap&&r(e.transmissionMap,"Opacity"),e.thicknessMap&&r(e.thicknessMap,"PBR_Subsurface"),e.normalMap&&r(e.normalMap,"PBR_Other_Normal"),e.anisotropyMap&&r(e.anisotropyMap,"PBR_Other_Anisotropy"),e.iridescenceMap&&r(e.iridescenceMap,"PBR_Other_Iridescence"),e.iridescenceThicknessMap&&r(e.iridescenceThicknessMap,"PBR_Other_IridescenceThickness"),e.sheenColorMap&&r(e.sheenColorMap,"PBR_Other_SheenColor"),e.sheenRoughnessMap&&r(e.sheenRoughnessMap,"PBR_Other_SheenRoughness"),e.specularIntensityMap&&r(e.specularIntensityMap,"PBR_Other_SpecularIntensity")):(e.map&&r(e.map,"Diffuse"),e.alphaMap&&r(e.alphaMap,"Transparency"),e.bumpMap&&r(e.bumpMap,"Bump"),e.envMap&&r(e.envMap,"Emap")),M++}if(e.traverse((function(e){if((e.isMesh||e.isPoints||e.isLine||e.isLineSegments)&&(d=new o.ObjectAttributes,y=i.interleaved_buffer_attribute_check(e.geometry.clone()),g=(new Matrix4).copy(e.matrix),function e(a,t=!1){!a||"Group"!==a.type&&"Object3D"!==a.type&&!0!==t||(g=g.premultiply(a.matrix),e(a.parent,a.isMesh&&a.parent&&a.parent.isMesh))}(e.parent,e.isMesh&&e.parent&&e.parent.isMesh),y=y.applyMatrix4(g),y.groups&&y.groups.length>1&&d.setUserString("geometry_groups",JSON.stringify(y.groups))),e.isMesh||e.isLine||e.isLineSegments){if(e.isMesh)u=new o.Mesh.createFromThreejsJSON({data:y});else if((e.isLine||e.isLineSegments)&&!0===c){const e=new o.Point3dList;for(let a=0;a<y.attributes.position.array.length;a+=3)e.add(y.attributes.position.array[a],y.attributes.position.array[a+1],y.attributes.position.array[a+2]);u=new o.PolylineCurve(e)}if(y.attributes&&y.attributes.color){let a=y.attributes.color.array,t=new Uint8Array(y.attributes.color.array.length);for(let e=0;e<t.length;e++){let r=Math.max(-1,Math.min(1,a[e]));r=r<0?32768*r:32767*r,r/=256,t[e]=r+l}if(e.isLine||e.isLineSegments){if(!0===c){let e="";for(let a=0;a<t.length;a+=y.attributes.color.itemSize)e+=t[a]+","+t[a+1]+","+t[a+2]+",";d.setUserString("colors",e.slice(0,-1))}}else for(let e=0;e<t.length;e+=y.attributes.color.itemSize)u.vertexColors().add(t[e],t[e+1],t[e+2])}if(!1===c)if(Array.isArray(e.material))for(const a of e.material)e.isMesh&&(v(a.clone(),e.material.length>1),s.objects().add(u,d));else e.isMesh&&(v(e.material.clone()),s.objects().add(u,d));else{if(Array.isArray(e.material))for(const a of e.material)v(a.clone(),e.material.length>1);else v(e.material.clone());s.objects().add(u,d)}}else if(e.isPoints){if(u=new o.PointCloud,y.attributes&&y.attributes.color){let e=y.attributes.color.array,a=new Uint8Array(y.attributes.color.array.length);for(let t=0;t<a.length;t++){let r=Math.max(-1,Math.min(1,e[t]));r=r<0?32768*r:32767*r,r/=256,a[t]=r+l}let t=y.attributes.position.array;for(let e=0;e<a.length;e+=y.attributes.color.itemSize){let r=[t[e],t[e+1],t[e+2]],i={r:a[e],g:a[e+1],b:a[e+2],a:255},o=u.insertNew(b);o.location=r,o.color=i,b++}}else{let e=new o.Material;if(e.default(),material.name&&""!==material.name?e.name=material.name:e.name="material_"+M,material.color){let a={r:255*material.color.r,g:255*material.color.g,b:255*material.color.b,a:255},t=y.attributes.position.array;for(let e=0;e<t.length;e+=y.attributes.position.itemSize){let r=[t[e],t[e+1],t[e+2]],i=u.insertNew(b);i.location=r,i.color=a,b++}e.diffuseColor=a}material.opacity&&(e.transparency=1-material.opacity),s.materials().add(e),d.materialSource=o.ObjectMaterialSource.MaterialFromObject,d.materialIndex=M,M++}s.objects().add(u,d)}})),0===M&&0===b){if("function"==typeof t)return t("THREE.3DMExporter: No qualifying objects found!"),null;throw new Error("THREE.3DMExporter: No qualifying objects found!")}if(Object.keys(f).forEach((e=>{s.strings().set(e,f[e])})),"function"!=typeof a)return s.toByteArray();a(s.toByteArray())}deinterleave(e,a="color"){const t=e.attributes[a],r=t.itemSize,i=t.offset,o=t.data;if(void 0===o)return[];let s=new InterleavedBufferAttribute(o,r,i),n=deinterleaveAttribute(s),l=Array(n.array.length);for(let e=0,a=n.array.length;e<a;e++)l[e]=isNaN(n.array[e])?0:n.array[e];return new BufferAttribute(new Float32Array(l),r)}interleaved_buffer_attribute_check(e){const a=["position","normal","color","tangent","uv","uv1","uv2","uv3"];for(const t of a)if(e.attributes[t]&&e.attributes[t].isInterleavedBufferAttribute){if(e.attributes[t].data&&e.attributes[t].data.array){let a=this.deinterleave(e,t);e.deleteAttribute(t),e.setAttribute(t,a)}}else if(e.attributes[t]&&e.attributes[t].array){const a=e.attributes[t].itemSize,r=e.attributes[t].array,i=Array(r.length);for(let e=0,a=r.length;e<a;e++)i[e]=isNaN(r[e])?0:r[e];e.deleteAttribute(t),e.setAttribute(t,new BufferAttribute(new Float32Array(i),a))}return e}imageURLfromTexture(e,a=!0,t,r=!1){const i=e.image;if(void 0!==i){if(/^data:/i.test(i.src)&&t===1/0&&!1===r)return i.src;const e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");e.width=Math.min(i.width,Math.min(2560,t)),e.height=Math.min(i.height,Math.min(2560,t));const o=e.getContext("2d");if(!0===r&&(o.translate(0,e.height),o.scale(1,-1)),i instanceof ImageData)o.putImageData(i,0,0);else if(i.data&&i.data.constructor===Uint8Array){let e=new ImageData(new Uint8ClampedArray(i.data),i.width,i.height);o.putImageData(e,0,0)}else o.drawImage(i,0,0,e.width,e.height);return(e.width>2048||e.height>2048)&&!a?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}return null}}export{Rhino3dmExporter};