import{CanvasTexture,Color,LinearFilter,LinearMipmapLinearFilter,MathUtils,Matrix3,Mesh,PerspectiveCamera,PlaneGeometry,RepeatWrapping,Scene,ShaderMaterial,SRGBColorSpace,Uniform,Vector2,Vector3}from"three";class OBJExporter{parseAsync(e,a){const t=this;return new Promise((function(s,r){t.parse(e,s,r,a)}))}async parse(e,a,t,s={}){const r={filename:"model",map_flip_required:!1,maxTextureSize:1/0},n=(s=Object.assign(r,s)).map_flip_required,i=s.maxTextureSize,p=s.filename,o=this;o._renderer=null,o.fullscreenQuad=null,o.fullscreenQuadGeometry=null,o.fullscreenQuadMaterial=null;let c="",l=0,m=0,u=0,M=0,d=0,g=0,h={},f=[],y=!1;const x=new Vector3,w=new Color,T=new Vector3,_=new Vector2,C=[];if(e.traverse((function(e){!0===e.isMesh&&function(e){let a=0,s=0,r=0,n={};const i=e.geometry,p=new Matrix3;if(!i.isBufferGeometry){if("function"==typeof t)return t("THREE.OBJExporter: Geometry is not of type THREE.BufferGeometry."),[];throw new Error("THREE.OBJExporter: Geometry is not of type THREE.BufferGeometry.")}y=void 0!==i.attributes.tangent;const o=i.groups,d=i.getAttribute("color"),g=i.getAttribute("position"),w=i.getAttribute("normal"),v=i.getAttribute("uv"),P=i.getIndex();if(""===e.name?e.name="mesh_"+M:(e.name=e.name.replaceAll("#",""),e.name=e.name.replaceAll(" ","_")),c+="o "+e.name+"\n",e.material&&void 0!==e.material.name){""===e.material.name?e.material.name="mesh_material_"+M:(e.material.name.toUpperCase().endsWith(".PNG")||e.material.name.toUpperCase().endsWith(".JPG"))&&(e.material.name=e.material.name.substring(0,e.material.name.lastIndexOf("."))),e.material.name=e.material.name.replaceAll("#",""),e.material.name=e.material.name.replaceAll(" ","_");let a=e.material.name;!1===f.includes(a)&&(f.push(a),h[a]=e.material),h[a]?h[a]!==e.material?(a=e.material.name+"_"+M,e.material.name=a,c+="usemtl "+a+"\n",h[a]=e.material,f.push(a)):c+="usemtl "+a+"\n":(h[a]=e.material,c+="usemtl "+a+"\n")}else if(e.material&&Array.isArray(e.material))if(h["multi_"+e.name]=e.material,void 0!==o){let a=0;for(let t=0,s=o.length;t<s;t++)""===e.material[o[t].materialIndex].name?(e.material[o[t].materialIndex].name="mesh_group_material_"+M+"_"+a,a+=1):(e.material[o[t].materialIndex].name.toUpperCase().endsWith(".PNG")||e.material[o[t].materialIndex].name.toUpperCase().endsWith(".JPG"))&&(e.material[o[t].materialIndex].name=e.material[o[t].materialIndex].name.substring(0,e.material[o[t].materialIndex].name.lastIndexOf("."))),e.material[o[t].materialIndex].name=e.material[o[t].materialIndex].name.replaceAll("#",""),e.material[o[t].materialIndex].name=e.material[o[t].materialIndex].name.replaceAll(" ","_"),n[o[t].start]=e.material[o[t].materialIndex].name}else c+="usemtl multi_"+e.name+"\n";else e.material&&void 0===d&&(c+="usemtl material"+e.material.id+"\n",h["material"+e.material.id]=e.material);if(void 0!==g)for(let t=0,s=g.count;t<s;t++,a++)x.x=g.getX(t),x.y=g.getY(t),x.z=g.getZ(t),x.applyMatrix4(e.matrixWorld),c+=d?"v "+x.x+" "+x.y+" "+x.z+" "+d.getX(t)+" "+d.getY(t)+" "+d.getZ(t)+"\n":"v "+x.x+" "+x.y+" "+x.z+"\n";if(void 0!==v)for(let e=0,a=v.count;e<a;e++,r++)_.x=v.getX(e)||0,_.y=v.getY(e)||0,c+="vt "+_.x+" "+_.y+"\n";if(void 0!==w){p.getNormalMatrix(e.matrixWorld);for(let a=0,t=w.count;a<t;a++,s++)T.x=w.getX(a)*(e.scale.x||1),T.y=w.getY(a)*(e.scale.y||1),T.z=w.getZ(a)*(e.scale.z||1),T.applyMatrix3(p).normalize(),c+="vn "+T.x+" "+T.y+" "+T.z+"\n"}if(null!==P)for(let e=0,a=P.count;e<a;e+=3){Object.keys(n).forEach((a=>{parseInt(a)===e&&(c+="usemtl "+n[e]+"\n")}));for(let a=0;a<3;a++){const t=P.getX(e+a)+1;C[a]=l+t+(w||v?"/"+(v?m+t:"")+(w?"/"+(u+t):""):"")}c+="f "+C.join(" ")+"\n"}else for(let e=0,a=g.count;e<a;e+=3){Object.keys(n).forEach((a=>{parseInt(a)===e&&(c+="usemtl "+n[e]+"\n")}));for(let a=0;a<3;a++){const t=e+a+1;C[a]=l+t+(w||v?"/"+(v?m+t:"")+(w?"/"+(u+t):""):"")}c+="f "+C.join(" ")+"\n"}l+=a,m+=r,u+=s,M+=1}(e.clone()),!0!==e.isLine&&!0!==e.isLineSegments||function(e){""===e.name?e.name="line_"+d:(e.name=e.name.replaceAll("#",""),e.name=e.name.replaceAll(" ","_"));let a=0;const s=e.geometry,r=e.type;if(!s.isBufferGeometry){if("function"==typeof t)return t("THREE.OBJExporter: Geometry is not of type THREE.BufferGeometry."),[];throw new Error("THREE.OBJExporter: Geometry is not of type THREE.BufferGeometry.")}const n=s.getAttribute("position"),i=s.getAttribute("color");if(c+="o "+e.name+"\n",e.material&&(e.material.name?""===e.material.name?e.material.name="line_material_"+d:(e.material.name=e.material.name.replaceAll("#",""),e.material.name=e.material.name.replaceAll(" ","_")):e.material.name="line_material_"+d,c+="usemtl "+e.material.name+"\n",h[e.material.name]=e.material,d+=1),void 0!==n)for(let t=0,s=n.count;t<s;t++,a++)x.x=n.getX(t),x.y=n.getY(t),x.z=n.getZ(t),x.applyMatrix4(e.matrixWorld),c+="v "+x.x+" "+x.y+" "+x.z,void 0!==i&&(w.fromBufferAttribute(i,t).convertLinearToSRGB(),c+=" "+w.r+" "+w.g+" "+w.b),c+="\n";if("LineSegments"===r)for(let e=1,a=e+1,t=n.count;e<t;e+=2,a=e+1)c+="l "+(l+e)+" "+(l+a)+"\n";if("Line"===r){c+="l ";for(let e=1,a=n.count;e<=a;e++)c+=l+e+" ";c+="\n"}l+=a}(e.clone()),!0===e.isPoints&&function(e){""===e.name?e.name="points_"+g:(e.name=e.name.replaceAll("#",""),e.name=e.name.replaceAll(" ","_"));let a=0;const s=e.geometry;if(!s.isBufferGeometry){if("function"==typeof t)return t("THREE.OBJExporter: Geometry is not of type THREE.BufferGeometry."),[];throw new Error("THREE.OBJExporter: Geometry is not of type THREE.BufferGeometry.")}const r=s.getAttribute("position"),n=s.getAttribute("color");if(c+="o "+e.name+"\n",void 0!==r){for(let t=0,s=r.count;t<s;t++,a++)x.fromBufferAttribute(r,t),x.applyMatrix4(e.matrixWorld),c+="v "+x.x+" "+x.y+" "+x.z,void 0!==n&&(w.fromBufferAttribute(n,t).convertLinearToSRGB(),c+=" "+w.r+" "+w.g+" "+w.b),c+="\n";c+="p ";for(let e=1,a=r.count;e<=a;e++)c+=l+e+" ";c+="\n"}l+=a,e.material&&(e.material.name?""===e.material.name?e.material.name="points_material_"+g:(e.material.name=e.material.name.replaceAll("#",""),e.material.name=e.material.name.replaceAll(" ","_")):e.material.name="points_material_"+g,h[e.material.name]=e.material,c+="usemtl "+e.material.name+"\n",g+=1)}(e.clone())})),0!==Object.keys(h).length){c="mtllib "+p+".mtl\n"+c;let e,t="# MTL file - created by a modified three.js OBJExporter\n",s=[],r={},n=[],l=[],m=1;const u="png",M=[".PNG",".JPG",".JPEG",".JFIF",".PJP",".PJPEG",".BMP",".GIF",".SVG",".WEBP"];for(const a of Object.keys(h))Array.isArray(h[a])?h[a].forEach((async a=>{e=!1,await d(a)})):(e=!1,await d(h[a]));async function d(a){let p=a.name&&""!==a.name?M.some((e=>a.name.toUpperCase().endsWith(e)))?a.name.substring(0,a.name.lastIndexOf(".")):a.name:"material"+a.id;if(p=p.replaceAll("#",""),p=p.replaceAll(" ","_"),!1===l.includes(p)){l.push(p);let c=a.opacity<1?1-a.opacity:"0.0000";if(!0===a.transparent&&0===parseFloat(c)&&(c="0.0001"),t+="\nnewmtl "+p+"\n",t+="Tr "+c+"\n",t+="Tf 1.0000 1.0000 1.0000\n",t+="illum 1\n",a.aoMapIntensity&&a.aoMapIntensity>0&&(t+="Ka "+a.aoMapIntensity+" "+a.aoMapIntensity+" "+a.aoMapIntensity+"\n"),a.color&&(t+="Kd "+a.color.r+" "+a.color.g+" "+a.color.b+"\n"),a.emissive&&(t+="Ke "+a.emissive.r+" "+a.emissive.g+" "+a.emissive.b+"\n"),a.specular&&(t+="Ks "+a.specular.r+" "+a.specular.g+" "+a.specular.b+"\n"),(void 0!==a.shininess&&a.shininess>0||void 0!==a.glossiness&&a.glossiness>0)&&(t+="Ns "+(a.shininess?a.shininess:a.glossiness)+"\n"),void 0!==a.metalness&&a.metalness>=0&&(t+="Pm "+a.metalness+"\n"),void 0!==a.roughness&&a.roughness>=0&&(t+="Pr "+a.roughness+"\n"),void 0!==a.ior&&a.ior>=1&&1.5!==a.ior?t+="Ni "+a.ior+"\n":void 0!==a.refractionRatio&&a.refractionRatio<=1&&.98!==a.refractionRatio&&(t+="Ni "+a.refractionRatio+"\n"),(!a.normalScale||1===a.normalScale.x&&1===a.normalScale.y||a.sheen)&&!0!==y||(t+="Pns "+a.normalScale.x+" "+(!0===y?a.normalScale.y*=-1:a.normalScale.y)+"\n"),a.displacementMap&&(a.displacementBias&&a.displacementBias>0&&(t+="disp_b "+a.displacementBias+"\n"),a.displacementScale&&a.displacementScale<1&&(t+="disp_s "+a.displacementScale+"\n")),a.clearcoat&&a.clearcoat>0&&(t+="Pcc "+a.clearcoat+"\n",a.clearcoatRoughness&&(t+="Pcr "+a.clearcoatRoughness+"\n"),(a.clearcoatNormalScale&&(1!==a.clearcoatNormalScale.x||1!==a.clearcoatNormalScale.y)||!0===y)&&(t+="Pcn "+a.clearcoatNormalScale.x+" "+(!0===y?a.clearcoatNormalScale.y*=-1:a.clearcoatNormalScale.y)+"\n")),void 0!==a.lightMapIntensity&&1!==a.lightMapIntensity&&(t+="Pli "+a.lightMapIntensity+"\n"),void 0!==a.emissiveIntensity&&1!==a.emissiveIntensity&&(t+="Pe "+a.emissiveIntensity+"\n"),a.anisotropy&&a.anisotropy>0&&(t+="Pa "+a.anisotropy+"\n",void 0!==a.anisotropyRotation&&(t+="Par "+a.anisotropyRotation+"\n")),a.iridescence&&a.iridescence>0&&(t+="Pi "+a.iridescence+"\n",a.iridescenceIOR&&a.iridescenceIOR>=1&&(t+="Pii "+a.iridescenceIOR+"\n"),a.iridescenceThicknessRange&&(t+="Pitx "+a.iridescenceThicknessRange[0]+"\n",t+="Pity "+a.iridescenceThicknessRange[1]+"\n")),a.sheen&&a.sheen>0&&(t+="Pbr_ps "+a.sheen+"\n",a.sheenColor&&(t+="Ps "+a.sheenColor.r+" "+a.sheenColor.g+" "+a.sheenColor.b+"\n"),void 0!==a.sheenRoughness&&(t+="Psr "+a.sheenRoughness+"\n")),(a.specularColor||a.specularIntensity||a.specularColorMap||a.specularIntensityMap)&&(a.specularColor&&(t+="Psp "+a.specularColor.r+" "+a.specularColor.g+" "+a.specularColor.b+"\n"),void 0!==a.specularIntensity&&(t+="Psi "+a.specularIntensity+"\n")),a.thickness&&a.thickness>0&&(a.transmission&&a.transmission>0?a.thickness<1?t+="Pth "+140*a.thickness+"\n":t+="Pth "+11*a.thickness+"\n":a.thickness<1?t+="Pth "+210*a.thickness+"\n":t+="Pth "+17*a.thickness+"\n"),a.attenuationDistance&&a.attenuationDistance!==1/0&&(t+="Pac "+a.attenuationColor.r+" "+a.attenuationColor.g+" "+a.attenuationColor.b+"\n",t+="Pad "+(a.attenuationDistance+(a.thickness||0))+"\n"),a.transmission&&a.transmission>0&&(t+="Ptr "+a.transmission+"\n"),void 0!==a.reflectivity&&a.reflectivity>0&&(t+="Prf "+a.reflectivity+"\n"),a.alphaTest>0&&(t+="a "+a.alphaTest+"\n"),void 0!==a.depthTest&&(t+="Pdt "+(!0===a.depthTest?1:0)+"\n"),t+="s "+a.side+"\n",a.map&&1009===a.map.type&&a.map.image){let e=a.map;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.map.clone(),i)),!0===a.map.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.map.repeat.x,o=a.map.repeat.y,c=a.map.offset.x,l=a.map.offset.y,m=a.map.wrapS,M=a.map.wrapT,d=a.map.center?a.map.center.x:0,g=a.map.center?a.map.center.y:0,h=a.map.rotation?a.map.rotation:0;!1===s.includes(a.map.uuid)?(s.push(a.map.uuid),r[a.map.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="map_Kd -r "+h+" -c "+d+" "+g+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+m+" "+M+" "+p+".png\n"):t+="map_Kd -r "+h+" -c "+d+" "+g+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+m+" "+M+" "+r[a.map.uuid]+".png\n"}}if(a.specularMap&&1009===a.specularMap.type&&a.specularMap.image){let e=a.specularMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.specularMap.clone(),i)),!0===a.specularMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.specularMap.repeat.x,o=a.specularMap.repeat.y,c=a.specularMap.offset.x,l=a.specularMap.offset.y,M=a.specularMap.wrapS,d=a.specularMap.wrapT,g=a.specularMap.center?a.specularMap.center.x:0,h=a.specularMap.center?a.specularMap.center.y:0,f=a.specularMap.rotation?a.specularMap.rotation:0;!1===s.includes(a.specularMap.uuid)?(p="specMap"+m,s.push(a.specularMap.uuid),r[a.specularMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="map_Ks -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="map_Ks -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.specularMap.uuid]+".png\n"}}if(a.emissiveMap&&1009===a.emissiveMap.type&&a.emissiveMap.image){let e=a.emissiveMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.emissiveMap.clone(),i)),!0===a.emissiveMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.emissiveMap.repeat.x,o=a.emissiveMap.repeat.y,c=a.emissiveMap.offset.x,l=a.emissiveMap.offset.y,M=a.emissiveMap.wrapS,d=a.emissiveMap.wrapT,g=a.emissiveMap.center?a.emissiveMap.center.x:0,h=a.emissiveMap.center?a.emissiveMap.center.y:0,f=a.emissiveMap.rotation?a.emissiveMap.rotation:0;!1===s.includes(a.emissiveMap.uuid)?(p="emMap"+m,s.push(a.emissiveMap.uuid),r[a.emissiveMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="map_Ke -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="map_Ke -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.emissiveMap.uuid]+".png\n"}}if(a.bumpMap&&1009===a.bumpMap.type&&a.bumpMap.image){let e=a.bumpMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.bumpMap.clone(),i)),!0===a.bumpMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.bumpMap.repeat.x,o=a.bumpMap.repeat.y,c=a.bumpMap.offset.x,l=a.bumpMap.offset.y,M=a.bumpMap.wrapS,d=a.bumpMap.wrapT,g=a.bumpMap.center?a.bumpMap.center.x:0,h=a.bumpMap.center?a.bumpMap.center.y:0,f=a.bumpMap.rotation?a.bumpMap.rotation:0;!1===s.includes(a.bumpMap.uuid)?(p="bmMap"+m,s.push(a.bumpMap.uuid),r[a.bumpMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),1===a.bumpScale?t+="map_bump -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n":t+="map_bump -bm "+a.bumpScale+" -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):1===a.bumpScale?t+="map_bump -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.bumpMap.uuid]+".png\n":t+="map_bump -bm "+a.bumpScale+" -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.bumpMap.uuid]+".png\n"}}if(a.lightMap&&1009===a.lightMap.type&&a.lightMap.image){let e=a.lightMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.lightMap.clone(),i)),!0===a.lightMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.lightMap.repeat.x,o=a.lightMap.repeat.y,c=a.lightMap.offset.x,l=a.lightMap.offset.y,M=a.lightMap.wrapS,d=a.lightMap.wrapT,g=a.lightMap.center?a.lightMap.center.x:0,h=a.lightMap.center?a.lightMap.center.y:0,f=a.lightMap.rotation?a.lightMap.rotation:0;!1===s.includes(a.lightMap.uuid)?(p="ltMap"+m,s.push(a.lightMap.uuid),r[a.lightMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="Pbr_pl_map -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="Pbr_pl_map -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.lightMap.uuid]+".png\n"}}if(a.metalnessMap&&1009===a.metalnessMap.type&&a.metalnessMap.image&&!1===e){let c=a.metalnessMap;if(!0===c.isCompressedTexture&&(c=await o.decompress(a.metalnessMap.clone(),i)),!0===a.metalnessMap.isCompressedTexture||c.image.src||c.image.data||c.image instanceof ImageBitmap){const i=a.metalnessMap.repeat.x,o=a.metalnessMap.repeat.y,l=a.metalnessMap.offset.x,M=a.metalnessMap.offset.y,d=a.metalnessMap.wrapS,g=a.metalnessMap.wrapT,h=a.metalnessMap.center?a.metalnessMap.center.x:0,f=a.metalnessMap.center?a.metalnessMap.center.y:0,y=a.metalnessMap.rotation?a.metalnessMap.rotation:0;!1===s.includes(a.metalnessMap.uuid)?(p="metalMap"+m,s.push(a.metalnessMap.uuid),r[a.metalnessMap.uuid]=p,n.push({name:p,ext:u,data:await v(c.image,u)}),a.roughnessMap&&a.roughnessMap===a.metalnessMap?(t+="map_Px -r "+y+" -c "+h+" "+f+" -s "+i+" "+o+" 1 -o "+l+" "+M+" 0 -w "+d+" "+g+" "+p+".png\n",e=!0):t+="map_Pm -r "+y+" -c "+h+" "+f+" -s "+i+" "+o+" 1 -o "+l+" "+M+" 0 -w "+d+" "+g+" "+p+".png\n"):a.roughnessMap&&a.roughnessMap===a.metalnessMap?(t+="map_Px -r "+y+" -c "+h+" "+f+" -s "+i+" "+o+" 1 -o "+l+" "+M+" 0 -w "+d+" "+g+" "+r[a.metalnessMap.uuid]+".png\n",e=!0):t+="map_Pm -r "+y+" -c "+h+" "+f+" -s "+i+" "+o+" 1 -o "+l+" "+M+" 0 -w "+d+" "+g+" "+r[a.metalnessMap.uuid]+".png\n"}}if(a.roughnessMap&&1009===a.roughnessMap.type&&a.roughnessMap.image&&!1===e){let c=a.roughnessMap;if(!0===c.isCompressedTexture&&(c=await o.decompress(a.roughnessMap.clone(),i)),!0===a.roughnessMap.isCompressedTexture||c.image.src||c.image.data||c.image instanceof ImageBitmap){const i=a.roughnessMap.repeat.x,o=a.roughnessMap.repeat.y,l=a.roughnessMap.offset.x,M=a.roughnessMap.offset.y,d=a.roughnessMap.wrapS,g=a.roughnessMap.wrapT,h=a.roughnessMap.center?a.roughnessMap.center.x:0,f=a.roughnessMap.center?a.roughnessMap.center.y:0,y=a.roughnessMap.rotation?a.roughnessMap.rotation:0;!1===s.includes(a.roughnessMap.uuid)?(p="roughMap"+m,s.push(a.roughnessMap.uuid),r[a.roughnessMap.uuid]=p,n.push({name:p,ext:u,data:await v(c.image,u)}),a.metalnessMap&&a.metalnessMap===a.roughnessMap?(t+="map_Px -r "+y+" -c "+h+" "+f+" -s "+i+" "+o+" 1 -o "+l+" "+M+" 0 -w "+d+" "+g+" "+p+".png\n",e=!0):t+="map_Pr -r "+y+" -c "+h+" "+f+" -s "+i+" "+o+" 1 -o "+l+" "+M+" 0 -w "+d+" "+g+" "+p+".png\n"):a.metalnessMap&&a.metalnessMap===a.roughnessMap?(t+="map_Px -r "+y+" -c "+h+" "+f+" -s "+i+" "+o+" 1 -o "+l+" "+M+" 0 -w "+d+" "+g+" "+r[a.roughnessMap.uuid]+".png\n",e=!0):t+="map_Pr -r "+y+" -c "+h+" "+f+" -s "+i+" "+o+" 1 -o "+l+" "+M+" 0 -w "+d+" "+g+" "+r[a.roughnessMap.uuid]+".png\n"}}if(a.displacementMap&&1009===a.displacementMap.type&&a.displacementMap.image){let e=a.displacementMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.displacementMap.clone(),i)),!0===a.displacementMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.displacementMap.repeat.x,o=a.displacementMap.repeat.y,c=a.displacementMap.offset.x,l=a.displacementMap.offset.y,M=a.displacementMap.wrapS,d=a.displacementMap.wrapT,g=a.displacementMap.center?a.displacementMap.center.x:0,h=a.displacementMap.center?a.displacementMap.center.y:0,f=a.displacementMap.rotation?a.displacementMap.rotation:0;!1===s.includes(a.displacementMap.uuid)?(p="displaceMap"+m,s.push(a.displacementMap.uuid),r[a.displacementMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="disp -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="disp -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.displacementMap.uuid]+".png\n"}}if(a.normalMap&&1009===a.normalMap.type&&a.normalMap.image){let e=a.normalMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.normalMap.clone(),i)),!0===a.normalMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.normalMap.repeat.x,o=a.normalMap.repeat.y,c=a.normalMap.offset.x,l=a.normalMap.offset.y,M=a.normalMap.wrapS,d=a.normalMap.wrapT,g=a.normalMap.center?a.normalMap.center.x:0,h=a.normalMap.center?a.normalMap.center.y:0,f=a.normalMap.rotation?a.normalMap.rotation:0;!1===s.includes(a.normalMap.uuid)?(p="norMap"+m,s.push(a.normalMap.uuid),r[a.normalMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="norm -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="norm -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.normalMap.uuid]+".png\n"}}if(a.alphaMap&&1009===a.alphaMap.type&&a.alphaMap.image){let e=a.alphaMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.alphaMap.clone(),i)),!0===a.alphaMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.alphaMap.repeat.x,o=a.alphaMap.repeat.y,c=a.alphaMap.offset.x,l=a.alphaMap.offset.y,M=a.alphaMap.wrapS,d=a.alphaMap.wrapT,g=a.alphaMap.center?a.alphaMap.center.x:0,h=a.alphaMap.center?a.alphaMap.center.y:0,f=a.alphaMap.rotation?a.alphaMap.rotation:0;!1===s.includes(a.alphaMap.uuid)?(p="alpMap"+m,s.push(a.alphaMap.uuid),r[a.alphaMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="map_d -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="map_d -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.alphaMap.uuid]+".png\n"}}if(a.aoMap&&1009===a.aoMap.type&&a.aoMap.image){let e=a.aoMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.aoMap.clone(),i)),!0===a.aoMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.aoMap.repeat.x,o=a.aoMap.repeat.y,c=a.aoMap.offset.x,l=a.aoMap.offset.y,M=a.aoMap.wrapS,d=a.aoMap.wrapT,g=a.aoMap.center?a.aoMap.center.x:0,h=a.aoMap.center?a.aoMap.center.y:0,f=a.aoMap.rotation?a.aoMap.rotation:0;!1===s.includes(a.aoMap.uuid)?(p="ambMap"+m,s.push(a.aoMap.uuid),r[a.aoMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="map_Ka -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="map_Ka -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.aoMap.uuid]+".png\n"}}if(a.anisotropyMap&&1009===a.anisotropyMap.type&&a.anisotropyMap.image){let e=a.anisotropyMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.anisotropyMap.clone(),i)),!0===a.anisotropyMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.anisotropyMap.repeat.x,o=a.anisotropyMap.repeat.y,c=a.anisotropyMap.offset.x,l=a.anisotropyMap.offset.y,M=a.anisotropyMap.wrapS,d=a.anisotropyMap.wrapT,g=a.anisotropyMap.center.x,h=a.anisotropyMap.center.y,f=a.anisotropyMap.rotation;!1===s.includes(a.anisotropyMap.uuid)?(p="anisMap"+m,s.push(a.anisotropyMap.uuid),r[a.anisotropyMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="map_Pa -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="map_Pa -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.anisotropyMap.uuid]+".png\n"}}if(a.clearcoatMap&&1009===a.clearcoatMap.type&&a.clearcoatMap.image){let e=a.clearcoatMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.clearcoatMap.clone(),i)),!0===a.clearcoatMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.clearcoatMap.repeat.x,o=a.clearcoatMap.repeat.y,c=a.clearcoatMap.offset.x,l=a.clearcoatMap.offset.y,M=a.clearcoatMap.wrapS,d=a.clearcoatMap.wrapT,g=a.clearcoatMap.center.x,h=a.clearcoatMap.center.y,f=a.clearcoatMap.rotation;!1===s.includes(a.clearcoatMap.uuid)?(p="ccMap"+m,s.push(a.clearcoatMap.uuid),r[a.clearcoatMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="map_Pcc -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="map_Pcc -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.clearcoatMap.uuid]+".png\n"}}if(a.clearcoatNormalMap&&1009===a.clearcoatNormalMap.type&&a.clearcoatNormalMap.image){let e=a.clearcoatNormalMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.clearcoatNormalMap.clone(),i)),!0===a.clearcoatNormalMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.clearcoatNormalMap.repeat.x,o=a.clearcoatNormalMap.repeat.y,c=a.clearcoatNormalMap.offset.x,l=a.clearcoatNormalMap.offset.y,M=a.clearcoatNormalMap.wrapS,d=a.clearcoatNormalMap.wrapT,g=a.clearcoatNormalMap.center.x,h=a.clearcoatNormalMap.center.y,f=a.clearcoatNormalMap.rotation;!1===s.includes(a.clearcoatNormalMap.uuid)?(p="ccnMap"+m,s.push(a.clearcoatNormalMap.uuid),r[a.clearcoatNormalMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="map_Pcn -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="map_Pcn -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.clearcoatNormalMap.uuid]+".png\n"}}if(a.clearcoatRoughnessMap&&1009===a.clearcoatRoughnessMap.type&&a.clearcoatRoughnessMap.image){let e=a.clearcoatRoughnessMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.clearcoatRoughnessMap.clone(),i)),!0===a.clearcoatRoughnessMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.clearcoatRoughnessMap.repeat.x,o=a.clearcoatRoughnessMap.repeat.y,c=a.clearcoatRoughnessMap.offset.x,l=a.clearcoatRoughnessMap.offset.y,M=a.clearcoatRoughnessMap.wrapS,d=a.clearcoatRoughnessMap.wrapT,g=a.clearcoatRoughnessMap.center.x,h=a.clearcoatRoughnessMap.center.y,f=a.clearcoatRoughnessMap.rotation;!1===s.includes(a.clearcoatRoughnessMap.uuid)?(p="ccrMap"+m,s.push(a.clearcoatRoughnessMap.uuid),r[a.clearcoatRoughnessMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="map_Pcr -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="map_Pcr -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.clearcoatRoughnessMap.uuid]+".png\n"}}if(a.iridescenceMap&&1009===a.iridescenceMap.type&&a.iridescenceMap.image){let e=a.iridescenceMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.iridescenceMap.clone(),i)),!0===a.iridescenceMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.iridescenceMap.repeat.x,o=a.iridescenceMap.repeat.y,c=a.iridescenceMap.offset.x,l=a.iridescenceMap.offset.y,M=a.iridescenceMap.wrapS,d=a.iridescenceMap.wrapT,g=a.iridescenceMap.center.x,h=a.iridescenceMap.center.y,f=a.iridescenceMap.rotation;!1===s.includes(a.iridescenceMap.uuid)?(p="irMap"+m,s.push(a.iridescenceMap.uuid),r[a.iridescenceMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="map_Pi -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="map_Pi -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.iridescenceMap.uuid]+".png\n"}}if(a.iridescenceThicknessMap&&1009===a.iridescenceThicknessMap.type&&a.iridescenceThicknessMap.image){let e=a.iridescenceThicknessMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.iridescenceThicknessMap.clone(),i)),!0===a.iridescenceThicknessMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.iridescenceThicknessMap.repeat.x,o=a.iridescenceThicknessMap.repeat.y,c=a.iridescenceThicknessMap.offset.x,l=a.iridescenceThicknessMap.offset.y,M=a.iridescenceThicknessMap.wrapS,d=a.iridescenceThicknessMap.wrapT,g=a.iridescenceThicknessMap.center.x,h=a.iridescenceThicknessMap.center.y,f=a.iridescenceThicknessMap.rotation;!1===s.includes(a.iridescenceThicknessMap.uuid)?(p="irthMap"+m,s.push(a.iridescenceThicknessMap.uuid),r[a.iridescenceThicknessMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="map_Pit -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="map_Pit -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.iridescenceThicknessMap.uuid]+".png\n"}}if(a.sheenColorMap&&1009===a.sheenColorMap.type&&a.sheenColorMap.image){let e=a.sheenColorMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.sheenColorMap.clone(),i)),!0===a.sheenColorMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.sheenColorMap.repeat.x,o=a.sheenColorMap.repeat.y,c=a.sheenColorMap.offset.x,l=a.sheenColorMap.offset.y,M=a.sheenColorMap.wrapS,d=a.sheenColorMap.wrapT,g=a.sheenColorMap.center.x,h=a.sheenColorMap.center.y,f=a.sheenColorMap.rotation;!1===s.includes(a.sheenColorMap.uuid)?(p="shcMap"+m,s.push(a.sheenColorMap.uuid),r[a.sheenColorMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="map_Psc -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="map_Psc -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.sheenColorMap.uuid]+".png\n"}}if(a.sheenRoughnessMap&&1009===a.sheenRoughnessMap.type&&a.sheenRoughnessMap.image){let e=a.sheenRoughnessMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.sheenRoughnessMap.clone(),i)),!0===a.sheenRoughnessMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.sheenRoughnessMap.repeat.x,o=a.sheenRoughnessMap.repeat.y,c=a.sheenRoughnessMap.offset.x,l=a.sheenRoughnessMap.offset.y,M=a.sheenRoughnessMap.wrapS,d=a.sheenRoughnessMap.wrapT,g=a.sheenRoughnessMap.center.x,h=a.sheenRoughnessMap.center.y,f=a.sheenRoughnessMap.rotation;!1===s.includes(a.sheenRoughnessMap.uuid)?(p="shrMap"+m,s.push(a.sheenRoughnessMap.uuid),r[a.sheenRoughnessMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="map_Psr -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="map_Psr -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.sheenRoughnessMap.uuid]+".png\n"}}if(a.specularIntensityMap&&1009===a.specularIntensityMap.type&&a.specularIntensityMap.image){let e=a.specularIntensityMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.specularIntensityMap.clone(),i)),!0===a.specularIntensityMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.specularIntensityMap.repeat.x,o=a.specularIntensityMap.repeat.y,c=a.specularIntensityMap.offset.x,l=a.specularIntensityMap.offset.y,M=a.specularIntensityMap.wrapS,d=a.specularIntensityMap.wrapT,g=a.specularIntensityMap.center.x,h=a.specularIntensityMap.center.y,f=a.specularIntensityMap.rotation;!1===s.includes(a.specularIntensityMap.uuid)?(p="spiMap"+m,s.push(a.specularIntensityMap.uuid),r[a.specularIntensityMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="map_Psi -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="map_Psi -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.specularIntensityMap.uuid]+".png\n"}}if(a.specularColorMap&&1009===a.specularColorMap.type&&a.specularColorMap.image){let e=a.specularColorMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.specularColorMap.clone(),i)),!0===a.specularColorMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.specularColorMap.repeat.x,o=a.specularColorMap.repeat.y,c=a.specularColorMap.offset.x,l=a.specularColorMap.offset.y,M=a.specularColorMap.wrapS,d=a.specularColorMap.wrapT,g=a.specularColorMap.center.x,h=a.specularColorMap.center.y,f=a.specularColorMap.rotation;!1===s.includes(a.specularColorMap.uuid)?(p="spcMap"+m,s.push(a.specularColorMap.uuid),r[a.specularColorMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="map_Psp -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="map_Psp -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.specularColorMap.uuid]+".png\n"}}if(a.thicknessMap&&1009===a.thicknessMap.type&&a.thicknessMap.image){let e=a.thicknessMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.thicknessMap.clone(),i)),!0===a.thicknessMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.thicknessMap.repeat.x,o=a.thicknessMap.repeat.y,c=a.thicknessMap.offset.x,l=a.thicknessMap.offset.y,M=a.thicknessMap.wrapS,d=a.thicknessMap.wrapT,g=a.thicknessMap.center.x,h=a.thicknessMap.center.y,f=a.thicknessMap.rotation;!1===s.includes(a.thicknessMap.uuid)?(p="thMap"+m,s.push(a.thicknessMap.uuid),r[a.thicknessMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="map_Pth -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="map_Pth -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.thicknessMap.uuid]+".png\n"}}if(a.transmissionMap&&1009===a.transmissionMap.type&&a.transmissionMap.image){let e=a.transmissionMap;if(!0===e.isCompressedTexture&&(e=await o.decompress(a.transmissionMap.clone(),i)),!0===a.transmissionMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const i=a.transmissionMap.repeat.x,o=a.transmissionMap.repeat.y,c=a.transmissionMap.offset.x,l=a.transmissionMap.offset.y,M=a.transmissionMap.wrapS,d=a.transmissionMap.wrapT,g=a.transmissionMap.center.x,h=a.transmissionMap.center.y,f=a.transmissionMap.rotation;!1===s.includes(a.transmissionMap.uuid)?(p="trMap"+m,s.push(a.transmissionMap.uuid),r[a.transmissionMap.uuid]=p,n.push({name:p,ext:u,data:await v(e.image,u)}),t+="map_Ptr -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+p+".png\n"):t+="map_Ptr -r "+f+" -c "+g+" "+h+" -s "+i+" "+o+" 1 -o "+c+" "+l+" 0 -w "+M+" "+d+" "+r[a.transmissionMap.uuid]+".png\n"}}m+=1}}Promise.all(n).then((()=>{if(null!==o._renderer&&(o._renderer.dispose(),o._renderer=null),"function"!=typeof a)return{obj:c,mtl:t,tex:n};a({obj:c,mtl:t,tex:n})}))}else{if(null!==o._renderer&&(o._renderer.dispose(),o._renderer=null),"function"!=typeof a)return{obj:c};a({obj:c})}async function v(e,a){let t,s;if(t=t||document.createElement("canvas"),t.width=Math.min(e.width,i),t.height=Math.min(e.height,i),s=s||t.getContext("2d"),!0===n&&(s.translate(0,t.height),s.scale(1,-1)),e instanceof ImageData)s.putImageData(e,0,0);else if(e.data&&e.data.constructor===Uint8Array){let a=new ImageData(new Uint8ClampedArray(e.data),e.width,e.height);s.putImageData(a,0,0)}else s.drawImage(e,0,0,t.width,t.height);return function(e){const a=atob(e),t=new Uint8Array(a.length);for(let e=0,s=t.length;e<s;e++)t[e]=a.charCodeAt(e);return t}(t.toDataURL(`image/${a}`,1).replace(/^data:image\/(png|jpg|jpeg);base64,/,""))}}async decompress(e,a=1/0){const t=this;let s,r=e.offset,n=e.repeat,i=e.image.width,p=e.image.height,o=!1;if(null===t._renderer){try{const{WebGLRenderer:e}=await import("three");t._renderer=new e({antialias:!1})}catch(e){}if(null===t._renderer)try{const{WebGPURenderer:e}=await import("three");t._renderer=new e({antialias:!1}),await t._renderer.init()}catch(e){}}t._renderer.outputColorSpace=e.colorSpace;const c=new PerspectiveCamera,l=new Scene;return t._renderer.isWebGPURenderer?(0===r.x&&0===r.y&&1===n.x&&1===n.y||(e.offset=new Vector2(0,0),e.repeat=new Vector2(1,1)),l.background=e,l.backgroundIntensity=1,l.background.needsUpdate=!0):(null===t.fullscreenQuadGeometry&&(t.fullscreenQuadGeometry=new PlaneGeometry(2,2,1,1)),null===t.fullscreenQuadMaterial&&(t.fullscreenQuadMaterial=new ShaderMaterial({uniforms:{blitTexture:new Uniform(e)},vertexShader:"\n\t\t\t\t\tvarying vec2 vUv;\n\t\t\t\t\tvoid main(){\n\t\t\t\t\t\tvUv = uv;\n\t\t\t\t\t\tgl_Position = vec4(position.xy * 1.0,0.,.999999);\n\t\t\t\t\t}",fragmentShader:"\n\t\t\t\t\tuniform sampler2D blitTexture; \n\t\t\t\t\tvarying vec2 vUv;\n\t\t\t\t\tvoid main(){ \n\t\t\t\t\t\tgl_FragColor = vec4(vUv.xy, 0, 1);\n\t\t\t\t\t\t\n\t\t\t\t\t\t#ifdef IS_SRGB\n\t\t\t\t\t\tgl_FragColor = LinearTosRGB( texture2D( blitTexture, vUv) );\n\t\t\t\t\t\t#else\n\t\t\t\t\t\tgl_FragColor = texture2D( blitTexture, vUv);\n\t\t\t\t\t\t#endif\n\t\t\t\t\t}"})),t.fullscreenQuadMaterial.uniforms.blitTexture.value=e,t.fullscreenQuadMaterial.needsUpdate=!0,null===t.fullscreenQuad&&(t.fullscreenQuad=new Mesh(t.fullscreenQuadGeometry,t.fullscreenQuadMaterial)),t.fullscreenQuad.frustrumCulled=!1),t._renderer.isWebGPURenderer?MathUtils.isPowerOfTwo(i)&&MathUtils.isPowerOfTwo(p)||(MathUtils.isPowerOfTwo(i)||(i=MathUtils.ceilPowerOfTwo(i)),MathUtils.isPowerOfTwo(p)||(p=MathUtils.ceilPowerOfTwo(p)),o=!0):null!==t.fullscreenQuad&&l.add(t.fullscreenQuad),t._renderer.setSize(Math.min(i,a),Math.min(p,a)),await new Promise((e=>{t._renderer.isWebGPURenderer?(t._renderer.clearAsync(),t._renderer.renderAsync(l,c)):(t._renderer.clear(),t._renderer.render(l,c)),e(s=new CanvasTexture(t._renderer.domElement))})),t._renderer.isWebGPURenderer&&t._renderer._quad&&(t._renderer._quad.material&&t._renderer._quad.material.dispose(),t._renderer._quad.geometry&&t._renderer._quad.geometry.dispose()),t._renderer.isWebGPURenderer&&!0===o&&await new Promise((a=>{let t=document.createElement("canvas");t.width=e.image.width,t.height=e.image.height;let r=t.getContext("2d",{willReadFrequently:!0}),n=new Image;n.onload=function(){r.drawImage(this,0,0,t.width,t.height),a(s.image=t)},n.src=s.image.toDataURL("image/png",1)})),s.colorSpace=e.colorSpace||SRGBColorSpace,s.minFilter=e.minFilter||LinearMipmapLinearFilter,s.magFilter=e.magFilter||LinearFilter,s.wrapS=e.wrapS||RepeatWrapping,s.wrapT=e.wrapT||RepeatWrapping,s.offset=new Vector2(r.x,r.y),s.repeat=new Vector2(n.x,n.y),s.name=e.name,s.needsUpdate=!0,null!==t.fullscreenQuad?(l.remove(t.fullscreenQuad),t.fullscreenQuad.material&&t.fullscreenQuad.material.uniforms&&(Object.keys(t.fullscreenQuad.material.uniforms).forEach((e=>{if(t.fullscreenQuad.material.uniforms[e].value){let a=t.fullscreenQuad.material.uniforms[e].value;a.type&&1009===a.type&&a.dispose()}})),t.fullscreenQuad.material.dispose()),t.fullscreenQuad.geometry.dispose(),t.fullscreenQuad=null):l.background.dispose(),e.dispose(),s}}export{OBJExporter};