import{Color,Matrix3,Vector2,Vector3}from"three";import{decompress}from"https://cdn.jsdelivr.net/npm/three@0.164.0/examples/jsm/utils/TextureUtils.min.js";class OBJExporter{parse(e,a,s={}){const t={filename:"model",map_flip_required:!1,maxTextureSize:1/0},p=(s=Object.assign(t,s)).map_flip_required,n=s.maxTextureSize,r=s.filename;let i="",o=0,m=0,c=0,l=0,u=0,M=0,d={},g=[],h=!1;const f=new Vector3,y=new Color,x=new Vector3,w=new Vector2,T=[];if(e.traverse((function(e){!0===e.isMesh&&function(e){let a=0,s=0,t=0,p={};const n=e.geometry,r=new Matrix3;if(!0!==n.isBufferGeometry)throw new Error("THREE.OBJExporter: Geometry is not THREE.BufferGeometry.");h=void 0!==n.attributes.tangent;const u=n.groups,M=n.getAttribute("color"),y=n.getAttribute("position"),C=n.getAttribute("normal"),I=n.getAttribute("uv"),_=n.getIndex();if(""===e.name?e.name="mesh_"+l:(e.name=e.name.replaceAll("#",""),e.name=e.name.replaceAll(" ","_")),i+="o "+e.name+"\n",e.material&&void 0!==e.material.name){""===e.material.name?e.material.name="mesh_material_"+l:(e.material.name.toUpperCase().endsWith(".PNG")||e.material.name.toUpperCase().endsWith(".JPG"))&&(e.material.name=e.material.name.substring(0,e.material.name.lastIndexOf("."))),e.material.name=e.material.name.replaceAll("#",""),e.material.name=e.material.name.replaceAll(" ","_");let a=e.material.name;!1===g.includes(a)&&(g.push(a),d[a]=e.material),d[a]?d[a]!==e.material?(a=e.material.name+"_"+l,e.material.name=a,i+="usemtl "+a+"\n",d[a]=e.material,g.push(a)):i+="usemtl "+a+"\n":(d[a]=e.material,i+="usemtl "+a+"\n")}else if(e.material&&Array.isArray(e.material))if(d["multi_"+e.name]=e.material,void 0!==u){let a=0;for(let s=0,t=u.length;s<t;s++)""===e.material[u[s].materialIndex].name?(e.material[u[s].materialIndex].name="mesh_group_material_"+l+"_"+a,a+=1):(e.material[u[s].materialIndex].name.toUpperCase().endsWith(".PNG")||e.material[u[s].materialIndex].name.toUpperCase().endsWith(".JPG"))&&(e.material[u[s].materialIndex].name=e.material[u[s].materialIndex].name.substring(0,e.material[u[s].materialIndex].name.lastIndexOf("."))),e.material[u[s].materialIndex].name=e.material[u[s].materialIndex].name.replaceAll("#",""),e.material[u[s].materialIndex].name=e.material[u[s].materialIndex].name.replaceAll(" ","_"),p[u[s].start]=e.material[u[s].materialIndex].name}else i+="usemtl multi_"+e.name+"\n";else e.material&&void 0===M&&(i+="usemtl material"+e.material.id+"\n",d["material"+e.material.id]=e.material);if(void 0!==y)for(let s=0,t=y.count;s<t;s++,a++)f.x=y.getX(s),f.y=y.getY(s),f.z=y.getZ(s),f.applyMatrix4(e.matrixWorld),i+=M?"v "+f.x+" "+f.y+" "+f.z+" "+M.getX(s)+" "+M.getY(s)+" "+M.getZ(s)+"\n":"v "+f.x+" "+f.y+" "+f.z+"\n";if(void 0!==I)for(let e=0,a=I.count;e<a;e++,t++)w.x=I.getX(e)||0,w.y=I.getY(e)||0,i+="vt "+w.x+" "+w.y+"\n";if(void 0!==C){r.getNormalMatrix(e.matrixWorld);for(let a=0,t=C.count;a<t;a++,s++)x.x=C.getX(a)*(e.scale.x||1),x.y=C.getY(a)*(e.scale.y||1),x.z=C.getZ(a)*(e.scale.z||1),x.applyMatrix3(r).normalize(),i+="vn "+x.x+" "+x.y+" "+x.z+"\n"}if(null!==_)for(let e=0,a=_.count;e<a;e+=3){Object.keys(p).forEach((a=>{parseInt(a)===e&&(i+="usemtl "+p[e]+"\n")}));for(let a=0;a<3;a++){const s=_.getX(e+a)+1;T[a]=o+s+(C||I?"/"+(I?m+s:"")+(C?"/"+(c+s):""):"")}i+="f "+T.join(" ")+"\n"}else for(let e=0,a=y.count;e<a;e+=3){Object.keys(p).forEach((a=>{parseInt(a)===e&&(i+="usemtl "+p[e]+"\n")}));for(let a=0;a<3;a++){const s=e+a+1;T[a]=o+s+(C||I?"/"+(I?m+s:"")+(C?"/"+(c+s):""):"")}i+="f "+T.join(" ")+"\n"}o+=a,m+=t,c+=s,l+=1}(e.clone()),!0!==e.isLine&&!0!==e.isLineSegments||function(e){""===e.name?e.name="line_"+u:(e.name=e.name.replaceAll("#",""),e.name=e.name.replaceAll(" ","_"));let a=0;const s=e.geometry,t=e.type;if(!0!==s.isBufferGeometry)throw new Error("THREE.OBJExporter: Geometry is not of type THREE.BufferGeometry.");const p=s.getAttribute("position"),n=s.getAttribute("color");if(i+="o "+e.name+"\n",e.material&&(e.material.name?""===e.material.name?e.material.name="line_material_"+u:(e.material.name=e.material.name.replaceAll("#",""),e.material.name=e.material.name.replaceAll(" ","_")):e.material.name="line_material_"+u,i+="usemtl "+e.material.name+"\n",d[e.material.name]=e.material,u+=1),void 0!==p)for(let s=0,t=p.count;s<t;s++,a++)f.x=p.getX(s),f.y=p.getY(s),f.z=p.getZ(s),f.applyMatrix4(e.matrixWorld),i+="v "+f.x+" "+f.y+" "+f.z,void 0!==n&&(y.fromBufferAttribute(n,s).convertLinearToSRGB(),i+=" "+y.r+" "+y.g+" "+y.b),i+="\n";if("LineSegments"===t)for(let e=1,a=e+1,s=p.count;e<s;e+=2,a=e+1)i+="l "+(o+e)+" "+(o+a)+"\n";if("Line"===t){i+="l ";for(let e=1,a=p.count;e<=a;e++)i+=o+e+" ";i+="\n"}o+=a}(e.clone()),!0===e.isPoints&&function(e){""===e.name?e.name="points_"+M:(e.name=e.name.replaceAll("#",""),e.name=e.name.replaceAll(" ","_"));let a=0;const s=e.geometry;if(!0!==s.isBufferGeometry)throw new Error("THREE.OBJExporter: Geometry is not of type THREE.BufferGeometry.");const t=s.getAttribute("position"),p=s.getAttribute("color");if(i+="o "+e.name+"\n",void 0!==t){for(let s=0,n=t.count;s<n;s++,a++)f.fromBufferAttribute(t,s),f.applyMatrix4(e.matrixWorld),i+="v "+f.x+" "+f.y+" "+f.z,void 0!==p&&(y.fromBufferAttribute(p,s).convertLinearToSRGB(),i+=" "+y.r+" "+y.g+" "+y.b),i+="\n";i+="p ";for(let e=1,a=t.count;e<=a;e++)i+=o+e+" ";i+="\n"}o+=a,e.material&&(e.material.name?""===e.material.name?e.material.name="points_material_"+M:(e.material.name=e.material.name.replaceAll("#",""),e.material.name=e.material.name.replaceAll(" ","_")):e.material.name="points_material_"+M,d[e.material.name]=e.material,i+="usemtl "+e.material.name+"\n",M+=1)}(e.clone())})),0!==Object.keys(d).length){i="mtllib "+r+".mtl\n"+i;let e,s="# MTL file - created by a modified three.js OBJExporter\n",t=[],p={},o=[],m=[],c=1;const l="png",u=[".PNG",".JPG",".JPEG",".JFIF",".PJP",".PJPEG",".BMP",".GIF",".SVG",".WEBP"];function M(a){let r=a.name&&""!==a.name?u.some((e=>a.name.toUpperCase().endsWith(e)))?a.name.substring(0,a.name.lastIndexOf(".")):a.name:"material"+a.id;if(r=r.replaceAll("#",""),r=r.replaceAll(" ","_"),!1===m.includes(r)){m.push(r);let i=a.opacity<1?1-a.opacity:"0.0000";if(!0===a.transparent&&0===parseFloat(i)&&(i="0.0001"),s+="\nnewmtl "+r+"\n",s+="Tr "+i+"\n",s+="Tf 1.0000 1.0000 1.0000\n",s+="illum 1\n",a.aoMapIntensity&&a.aoMapIntensity>0&&(s+="Ka "+a.aoMapIntensity+" "+a.aoMapIntensity+" "+a.aoMapIntensity+"\n"),a.color&&(s+="Kd "+a.color.r+" "+a.color.g+" "+a.color.b+"\n"),a.emissive&&(s+="Ke "+a.emissive.r+" "+a.emissive.g+" "+a.emissive.b+"\n"),a.specular&&(s+="Ks "+a.specular.r+" "+a.specular.g+" "+a.specular.b+"\n"),(void 0!==a.shininess&&a.shininess>0||void 0!==a.glossiness&&a.glossiness>0)&&(s+="Ns "+(a.shininess?a.shininess:a.glossiness)+"\n"),void 0!==a.metalness&&a.metalness>=0&&(s+="Pm "+a.metalness+"\n"),void 0!==a.roughness&&a.roughness>=0&&(s+="Pr "+a.roughness+"\n"),void 0!==a.ior&&a.ior>=1&&1.5!==a.ior?s+="Ni "+a.ior+"\n":void 0!==a.refractionRatio&&a.refractionRatio<=1&&.98!==a.refractionRatio&&(s+="Ni "+a.refractionRatio+"\n"),(!a.normalScale||1===a.normalScale.x&&1===a.normalScale.y||a.sheen)&&!0!==h||(s+="Pns "+a.normalScale.x+" "+(!0===h?a.normalScale.y*=-1:a.normalScale.y)+"\n"),a.displacementMap&&(a.displacementBias&&a.displacementBias>0&&(s+="disp_b "+a.displacementBias+"\n"),a.displacementScale&&a.displacementScale<1&&(s+="disp_s "+a.displacementScale+"\n")),a.clearcoat&&a.clearcoat>0&&(s+="Pcc "+a.clearcoat+"\n",a.clearcoatRoughness&&(s+="Pcr "+a.clearcoatRoughness+"\n"),(a.clearcoatNormalScale&&(1!==a.clearcoatNormalScale.x||1!==a.clearcoatNormalScale.y)||!0===h)&&(s+="Pcn "+a.clearcoatNormalScale.x+" "+(!0===h?a.clearcoatNormalScale.y*=-1:a.clearcoatNormalScale.y)+"\n")),void 0!==a.lightMapIntensity&&1!==a.lightMapIntensity&&(s+="Pli "+a.lightMapIntensity+"\n"),void 0!==a.emissiveIntensity&&1!==a.emissiveIntensity&&(s+="Pe "+a.emissiveIntensity+"\n"),a.anisotropy&&a.anisotropy>0&&(s+="Pa "+a.anisotropy+"\n",void 0!==a.anisotropyRotation&&(s+="Par "+a.anisotropyRotation+"\n")),a.iridescence&&a.iridescence>0&&(s+="Pi "+a.iridescence+"\n",a.iridescenceIOR&&a.iridescenceIOR>=1&&(s+="Pii "+a.iridescenceIOR+"\n"),a.iridescenceThicknessRange&&(s+="Pitx "+a.iridescenceThicknessRange[0]+"\n",s+="Pity "+a.iridescenceThicknessRange[1]+"\n")),a.sheen&&a.sheen>0&&(s+="Pbr_ps "+a.sheen+"\n",a.sheenColor&&(s+="Ps "+a.sheenColor.r+" "+a.sheenColor.g+" "+a.sheenColor.b+"\n"),void 0!==a.sheenRoughness&&(s+="Psr "+a.sheenRoughness+"\n")),(a.specularColor||a.specularIntensity||a.specularColorMap||a.specularIntensityMap)&&(a.specularColor&&(s+="Psp "+a.specularColor.r+" "+a.specularColor.g+" "+a.specularColor.b+"\n"),void 0!==a.specularIntensity&&(s+="Psi "+a.specularIntensity+"\n")),a.thickness&&a.thickness>0&&(a.transmission&&a.transmission>0?a.thickness<1?s+="Pth "+140*a.thickness+"\n":s+="Pth "+11*a.thickness+"\n":a.thickness<1?s+="Pth "+210*a.thickness+"\n":s+="Pth "+17*a.thickness+"\n"),a.attenuationDistance&&a.attenuationDistance!==1/0&&(s+="Pac "+a.attenuationColor.r+" "+a.attenuationColor.g+" "+a.attenuationColor.b+"\n",s+="Pad "+(a.attenuationDistance+(a.thickness||0))+"\n"),a.transmission&&a.transmission>0&&(s+="Ptr "+a.transmission+"\n"),void 0!==a.reflectivity&&a.reflectivity>0&&(s+="Prf "+a.reflectivity+"\n"),a.alphaTest>0&&(s+="a "+a.alphaTest+"\n"),void 0!==a.depthTest&&(s+="Pdt "+(!0===a.depthTest?1:0)+"\n"),s+="s "+a.side+"\n",a.map&&1009===a.map.type&&a.map.image){let e=a.map;if(!0===e.isCompressedTexture&&(e=decompress(a.map,n)),!0===a.map.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.map.repeat.x,i=a.map.repeat.y,m=a.map.offset.x,c=a.map.offset.y,u=a.map.wrapS,M=a.map.wrapT,d=a.map.center?a.map.center.x:0,g=a.map.center?a.map.center.y:0,h=a.map.rotation?a.map.rotation:0;!1===t.includes(a.map.uuid)?(t.push(a.map.uuid),p[a.map.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="map_Kd -r "+h+" -c "+d+" "+g+" -s "+n+" "+i+" 1 -o "+m+" "+c+" 0 -w "+u+" "+M+" "+r+".png\n"):s+="map_Kd -r "+h+" -c "+d+" "+g+" -s "+n+" "+i+" 1 -o "+m+" "+c+" 0 -w "+u+" "+M+" "+p[a.map.uuid]+".png\n"}}if(a.specularMap&&1009===a.specularMap.type&&a.specularMap.image){let e=a.specularMap;if(!0===e.isCompressedTexture&&(e=decompress(a.specularMap,n)),!0===a.specularMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.specularMap.repeat.x,i=a.specularMap.repeat.y,m=a.specularMap.offset.x,u=a.specularMap.offset.y,M=a.specularMap.wrapS,d=a.specularMap.wrapT,g=a.specularMap.center?a.specularMap.center.x:0,h=a.specularMap.center?a.specularMap.center.y:0,f=a.specularMap.rotation?a.specularMap.rotation:0;!1===t.includes(a.specularMap.uuid)?(r="specMap"+c,t.push(a.specularMap.uuid),p[a.specularMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="map_Ks -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="map_Ks -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.specularMap.uuid]+".png\n"}}if(a.emissiveMap&&1009===a.emissiveMap.type&&a.emissiveMap.image){let e=a.emissiveMap;if(!0===e.isCompressedTexture&&(e=decompress(a.emissiveMap,n)),!0===a.emissiveMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.emissiveMap.repeat.x,i=a.emissiveMap.repeat.y,m=a.emissiveMap.offset.x,u=a.emissiveMap.offset.y,M=a.emissiveMap.wrapS,d=a.emissiveMap.wrapT,g=a.emissiveMap.center?a.emissiveMap.center.x:0,h=a.emissiveMap.center?a.emissiveMap.center.y:0,f=a.emissiveMap.rotation?a.emissiveMap.rotation:0;!1===t.includes(a.emissiveMap.uuid)?(r="emMap"+c,t.push(a.emissiveMap.uuid),p[a.emissiveMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="map_Ke -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="map_Ke -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.emissiveMap.uuid]+".png\n"}}if(a.bumpMap&&1009===a.bumpMap.type&&a.bumpMap.image){let e=a.bumpMap;if(!0===e.isCompressedTexture&&(e=decompress(a.bumpMap,n)),!0===a.bumpMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.bumpMap.repeat.x,i=a.bumpMap.repeat.y,m=a.bumpMap.offset.x,u=a.bumpMap.offset.y,M=a.bumpMap.wrapS,d=a.bumpMap.wrapT,g=a.bumpMap.center?a.bumpMap.center.x:0,h=a.bumpMap.center?a.bumpMap.center.y:0,f=a.bumpMap.rotation?a.bumpMap.rotation:0;!1===t.includes(a.bumpMap.uuid)?(r="bmMap"+c,t.push(a.bumpMap.uuid),p[a.bumpMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),1===a.bumpScale?s+="map_bump -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n":s+="map_bump -bm "+a.bumpScale+" -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):1===a.bumpScale?s+="map_bump -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.bumpMap.uuid]+".png\n":s+="map_bump -bm "+a.bumpScale+" -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.bumpMap.uuid]+".png\n"}}if(a.lightMap&&1009===a.lightMap.type&&a.lightMap.image){let e=a.lightMap;if(!0===e.isCompressedTexture&&(e=decompress(a.lightMap,n)),!0===a.lightMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.lightMap.repeat.x,i=a.lightMap.repeat.y,m=a.lightMap.offset.x,u=a.lightMap.offset.y,M=a.lightMap.wrapS,d=a.lightMap.wrapT,g=a.lightMap.center?a.lightMap.center.x:0,h=a.lightMap.center?a.lightMap.center.y:0,f=a.lightMap.rotation?a.lightMap.rotation:0;!1===t.includes(a.lightMap.uuid)?(r="ltMap"+c,t.push(a.lightMap.uuid),p[a.lightMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="Pbr_pl_map -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="Pbr_pl_map -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.lightMap.uuid]+".png\n"}}if(a.metalnessMap&&1009===a.metalnessMap.type&&a.metalnessMap.image&&!1===e){let i=a.metalnessMap;if(!0===i.isCompressedTexture&&(i=decompress(a.metalnessMap,n)),!0===a.metalnessMap.isCompressedTexture||i.image.src||i.image.data||i.image instanceof ImageBitmap){const n=a.metalnessMap.repeat.x,m=a.metalnessMap.repeat.y,u=a.metalnessMap.offset.x,M=a.metalnessMap.offset.y,d=a.metalnessMap.wrapS,g=a.metalnessMap.wrapT,h=a.metalnessMap.center?a.metalnessMap.center.x:0,f=a.metalnessMap.center?a.metalnessMap.center.y:0,y=a.metalnessMap.rotation?a.metalnessMap.rotation:0;!1===t.includes(a.metalnessMap.uuid)?(r="metalMap"+c,t.push(a.metalnessMap.uuid),p[a.metalnessMap.uuid]=r,o.push({name:r,ext:l,data:C(i.image,l)}),a.roughnessMap&&a.roughnessMap===a.metalnessMap?(s+="map_Px -r "+y+" -c "+h+" "+f+" -s "+n+" "+m+" 1 -o "+u+" "+M+" 0 -w "+d+" "+g+" "+r+".png\n",e=!0):s+="map_Pm -r "+y+" -c "+h+" "+f+" -s "+n+" "+m+" 1 -o "+u+" "+M+" 0 -w "+d+" "+g+" "+r+".png\n"):a.roughnessMap&&a.roughnessMap===a.metalnessMap?(s+="map_Px -r "+y+" -c "+h+" "+f+" -s "+n+" "+m+" 1 -o "+u+" "+M+" 0 -w "+d+" "+g+" "+p[a.metalnessMap.uuid]+".png\n",e=!0):s+="map_Pm -r "+y+" -c "+h+" "+f+" -s "+n+" "+m+" 1 -o "+u+" "+M+" 0 -w "+d+" "+g+" "+p[a.metalnessMap.uuid]+".png\n"}}if(a.roughnessMap&&1009===a.roughnessMap.type&&a.roughnessMap.image&&!1===e){let i=a.roughnessMap;if(!0===i.isCompressedTexture&&(i=decompress(a.roughnessMap,n)),!0===a.roughnessMap.isCompressedTexture||i.image.src||i.image.data||i.image instanceof ImageBitmap){const n=a.roughnessMap.repeat.x,m=a.roughnessMap.repeat.y,u=a.roughnessMap.offset.x,M=a.roughnessMap.offset.y,d=a.roughnessMap.wrapS,g=a.roughnessMap.wrapT,h=a.roughnessMap.center?a.roughnessMap.center.x:0,f=a.roughnessMap.center?a.roughnessMap.center.y:0,y=a.roughnessMap.rotation?a.roughnessMap.rotation:0;!1===t.includes(a.roughnessMap.uuid)?(r="roughMap"+c,t.push(a.roughnessMap.uuid),p[a.roughnessMap.uuid]=r,o.push({name:r,ext:l,data:C(i.image,l)}),a.metalnessMap&&a.metalnessMap===a.roughnessMap?(s+="map_Px -r "+y+" -c "+h+" "+f+" -s "+n+" "+m+" 1 -o "+u+" "+M+" 0 -w "+d+" "+g+" "+r+".png\n",e=!0):s+="map_Pr -r "+y+" -c "+h+" "+f+" -s "+n+" "+m+" 1 -o "+u+" "+M+" 0 -w "+d+" "+g+" "+r+".png\n"):a.metalnessMap&&a.metalnessMap===a.roughnessMap?(s+="map_Px -r "+y+" -c "+h+" "+f+" -s "+n+" "+m+" 1 -o "+u+" "+M+" 0 -w "+d+" "+g+" "+p[a.roughnessMap.uuid]+".png\n",e=!0):s+="map_Pr -r "+y+" -c "+h+" "+f+" -s "+n+" "+m+" 1 -o "+u+" "+M+" 0 -w "+d+" "+g+" "+p[a.roughnessMap.uuid]+".png\n"}}if(a.displacementMap&&1009===a.displacementMap.type&&a.displacementMap.image){let e=a.displacementMap;if(!0===e.isCompressedTexture&&(e=decompress(a.displacementMap,n)),!0===a.displacementMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.displacementMap.repeat.x,i=a.displacementMap.repeat.y,m=a.displacementMap.offset.x,u=a.displacementMap.offset.y,M=a.displacementMap.wrapS,d=a.displacementMap.wrapT,g=a.displacementMap.center?a.displacementMap.center.x:0,h=a.displacementMap.center?a.displacementMap.center.y:0,f=a.displacementMap.rotation?a.displacementMap.rotation:0;!1===t.includes(a.displacementMap.uuid)?(r="displaceMap"+c,t.push(a.displacementMap.uuid),p[a.displacementMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="disp -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="disp -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.displacementMap.uuid]+".png\n"}}if(a.normalMap&&1009===a.normalMap.type&&a.normalMap.image){let e=a.normalMap;if(!0===e.isCompressedTexture&&(e=decompress(a.normalMap,n)),!0===a.normalMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.normalMap.repeat.x,i=a.normalMap.repeat.y,m=a.normalMap.offset.x,u=a.normalMap.offset.y,M=a.normalMap.wrapS,d=a.normalMap.wrapT,g=a.normalMap.center?a.normalMap.center.x:0,h=a.normalMap.center?a.normalMap.center.y:0,f=a.normalMap.rotation?a.normalMap.rotation:0;!1===t.includes(a.normalMap.uuid)?(r="norMap"+c,t.push(a.normalMap.uuid),p[a.normalMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="norm -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="norm -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.normalMap.uuid]+".png\n"}}if(a.alphaMap&&1009===a.alphaMap.type&&a.alphaMap.image){let e=a.alphaMap;if(!0===e.isCompressedTexture&&(e=decompress(a.alphaMap,n)),!0===a.alphaMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.alphaMap.repeat.x,i=a.alphaMap.repeat.y,m=a.alphaMap.offset.x,u=a.alphaMap.offset.y,M=a.alphaMap.wrapS,d=a.alphaMap.wrapT,g=a.alphaMap.center?a.alphaMap.center.x:0,h=a.alphaMap.center?a.alphaMap.center.y:0,f=a.alphaMap.rotation?a.alphaMap.rotation:0;!1===t.includes(a.alphaMap.uuid)?(r="alpMap"+c,t.push(a.alphaMap.uuid),p[a.alphaMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="map_d -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="map_d -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.alphaMap.uuid]+".png\n"}}if(a.aoMap&&1009===a.aoMap.type&&a.aoMap.image){let e=a.aoMap;if(!0===e.isCompressedTexture&&(e=decompress(a.aoMap,n)),!0===a.aoMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.aoMap.repeat.x,i=a.aoMap.repeat.y,m=a.aoMap.offset.x,u=a.aoMap.offset.y,M=a.aoMap.wrapS,d=a.aoMap.wrapT,g=a.aoMap.center?a.aoMap.center.x:0,h=a.aoMap.center?a.aoMap.center.y:0,f=a.aoMap.rotation?a.aoMap.rotation:0;!1===t.includes(a.aoMap.uuid)?(r="ambMap"+c,t.push(a.aoMap.uuid),p[a.aoMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="map_Ka -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="map_Ka -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.aoMap.uuid]+".png\n"}}if(a.anisotropyMap&&1009===a.anisotropyMap.type&&a.anisotropyMap.image){let e=a.anisotropyMap;if(!0===e.isCompressedTexture&&(e=decompress(a.anisotropyMap,n)),!0===a.anisotropyMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.anisotropyMap.repeat.x,i=a.anisotropyMap.repeat.y,m=a.anisotropyMap.offset.x,u=a.anisotropyMap.offset.y,M=a.anisotropyMap.wrapS,d=a.anisotropyMap.wrapT,g=a.anisotropyMap.center.x,h=a.anisotropyMap.center.y,f=a.anisotropyMap.rotation;!1===t.includes(a.anisotropyMap.uuid)?(r="anisMap"+c,t.push(a.anisotropyMap.uuid),p[a.anisotropyMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="map_Pa -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="map_Pa -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.anisotropyMap.uuid]+".png\n"}}if(a.clearcoatMap&&1009===a.clearcoatMap.type&&a.clearcoatMap.image){let e=a.clearcoatMap;if(!0===e.isCompressedTexture&&(e=decompress(a.clearcoatMap,n)),!0===a.clearcoatMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.clearcoatMap.repeat.x,i=a.clearcoatMap.repeat.y,m=a.clearcoatMap.offset.x,u=a.clearcoatMap.offset.y,M=a.clearcoatMap.wrapS,d=a.clearcoatMap.wrapT,g=a.clearcoatMap.center.x,h=a.clearcoatMap.center.y,f=a.clearcoatMap.rotation;!1===t.includes(a.clearcoatMap.uuid)?(r="ccMap"+c,t.push(a.clearcoatMap.uuid),p[a.clearcoatMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="map_Pcc -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="map_Pcc -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.clearcoatMap.uuid]+".png\n"}}if(a.clearcoatNormalMap&&1009===a.clearcoatNormalMap.type&&a.clearcoatNormalMap.image){let e=a.clearcoatNormalMap;if(!0===e.isCompressedTexture&&(e=decompress(a.clearcoatNormalMap,n)),!0===a.clearcoatNormalMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.clearcoatNormalMap.repeat.x,i=a.clearcoatNormalMap.repeat.y,m=a.clearcoatNormalMap.offset.x,u=a.clearcoatNormalMap.offset.y,M=a.clearcoatNormalMap.wrapS,d=a.clearcoatNormalMap.wrapT,g=a.clearcoatNormalMap.center.x,h=a.clearcoatNormalMap.center.y,f=a.clearcoatNormalMap.rotation;!1===t.includes(a.clearcoatNormalMap.uuid)?(r="ccnMap"+c,t.push(a.clearcoatNormalMap.uuid),p[a.clearcoatNormalMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="map_Pcn -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="map_Pcn -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.clearcoatNormalMap.uuid]+".png\n"}}if(a.clearcoatRoughnessMap&&1009===a.clearcoatRoughnessMap.type&&a.clearcoatRoughnessMap.image){let e=a.clearcoatRoughnessMap;if(!0===e.isCompressedTexture&&(e=decompress(a.clearcoatRoughnessMap,n)),!0===a.clearcoatRoughnessMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.clearcoatRoughnessMap.repeat.x,i=a.clearcoatRoughnessMap.repeat.y,m=a.clearcoatRoughnessMap.offset.x,u=a.clearcoatRoughnessMap.offset.y,M=a.clearcoatRoughnessMap.wrapS,d=a.clearcoatRoughnessMap.wrapT,g=a.clearcoatRoughnessMap.center.x,h=a.clearcoatRoughnessMap.center.y,f=a.clearcoatRoughnessMap.rotation;!1===t.includes(a.clearcoatRoughnessMap.uuid)?(r="ccrMap"+c,t.push(a.clearcoatRoughnessMap.uuid),p[a.clearcoatRoughnessMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="map_Pcr -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="map_Pcr -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.clearcoatRoughnessMap.uuid]+".png\n"}}if(a.iridescenceMap&&1009===a.iridescenceMap.type&&a.iridescenceMap.image){let e=a.iridescenceMap;if(!0===e.isCompressedTexture&&(e=decompress(a.iridescenceMap,n)),!0===a.iridescenceMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.iridescenceMap.repeat.x,i=a.iridescenceMap.repeat.y,m=a.iridescenceMap.offset.x,u=a.iridescenceMap.offset.y,M=a.iridescenceMap.wrapS,d=a.iridescenceMap.wrapT,g=a.iridescenceMap.center.x,h=a.iridescenceMap.center.y,f=a.iridescenceMap.rotation;!1===t.includes(a.iridescenceMap.uuid)?(r="irMap"+c,t.push(a.iridescenceMap.uuid),p[a.iridescenceMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="map_Pi -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="map_Pi -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.iridescenceMap.uuid]+".png\n"}}if(a.iridescenceThicknessMap&&1009===a.iridescenceThicknessMap.type&&a.iridescenceThicknessMap.image){let e=a.iridescenceThicknessMap;if(!0===e.isCompressedTexture&&(e=decompress(a.iridescenceThicknessMap,n)),!0===a.iridescenceThicknessMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.iridescenceThicknessMap.repeat.x,i=a.iridescenceThicknessMap.repeat.y,m=a.iridescenceThicknessMap.offset.x,u=a.iridescenceThicknessMap.offset.y,M=a.iridescenceThicknessMap.wrapS,d=a.iridescenceThicknessMap.wrapT,g=a.iridescenceThicknessMap.center.x,h=a.iridescenceThicknessMap.center.y,f=a.iridescenceThicknessMap.rotation;!1===t.includes(a.iridescenceThicknessMap.uuid)?(r="irthMap"+c,t.push(a.iridescenceThicknessMap.uuid),p[a.iridescenceThicknessMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="map_Pit -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="map_Pit -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.iridescenceThicknessMap.uuid]+".png\n"}}if(a.sheenColorMap&&1009===a.sheenColorMap.type&&a.sheenColorMap.image){let e=a.sheenColorMap;if(!0===e.isCompressedTexture&&(e=decompress(a.sheenColorMap,n)),!0===a.sheenColorMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.sheenColorMap.repeat.x,i=a.sheenColorMap.repeat.y,m=a.sheenColorMap.offset.x,u=a.sheenColorMap.offset.y,M=a.sheenColorMap.wrapS,d=a.sheenColorMap.wrapT,g=a.sheenColorMap.center.x,h=a.sheenColorMap.center.y,f=a.sheenColorMap.rotation;!1===t.includes(a.sheenColorMap.uuid)?(r="shcMap"+c,t.push(a.sheenColorMap.uuid),p[a.sheenColorMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="map_Psc -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="map_Psc -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.sheenColorMap.uuid]+".png\n"}}if(a.sheenRoughnessMap&&1009===a.sheenRoughnessMap.type&&a.sheenRoughnessMap.image){let e=a.sheenRoughnessMap;if(!0===e.isCompressedTexture&&(e=decompress(a.sheenRoughnessMap,n)),!0===a.sheenRoughnessMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.sheenRoughnessMap.repeat.x,i=a.sheenRoughnessMap.repeat.y,m=a.sheenRoughnessMap.offset.x,u=a.sheenRoughnessMap.offset.y,M=a.sheenRoughnessMap.wrapS,d=a.sheenRoughnessMap.wrapT,g=a.sheenRoughnessMap.center.x,h=a.sheenRoughnessMap.center.y,f=a.sheenRoughnessMap.rotation;!1===t.includes(a.sheenRoughnessMap.uuid)?(r="shrMap"+c,t.push(a.sheenRoughnessMap.uuid),p[a.sheenRoughnessMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="map_Psr -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="map_Psr -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.sheenRoughnessMap.uuid]+".png\n"}}if(a.specularIntensityMap&&1009===a.specularIntensityMap.type&&a.specularIntensityMap.image){let e=a.specularIntensityMap;if(!0===e.isCompressedTexture&&(e=decompress(a.specularIntensityMap,n)),!0===a.specularIntensityMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.specularIntensityMap.repeat.x,i=a.specularIntensityMap.repeat.y,m=a.specularIntensityMap.offset.x,u=a.specularIntensityMap.offset.y,M=a.specularIntensityMap.wrapS,d=a.specularIntensityMap.wrapT,g=a.specularIntensityMap.center.x,h=a.specularIntensityMap.center.y,f=a.specularIntensityMap.rotation;!1===t.includes(a.specularIntensityMap.uuid)?(r="spiMap"+c,t.push(a.specularIntensityMap.uuid),p[a.specularIntensityMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="map_Psi -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="map_Psi -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.specularIntensityMap.uuid]+".png\n"}}if(a.specularColorMap&&1009===a.specularColorMap.type&&a.specularColorMap.image){let e=a.specularColorMap;if(!0===e.isCompressedTexture&&(e=decompress(a.specularColorMap,n)),!0===a.specularColorMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.specularColorMap.repeat.x,i=a.specularColorMap.repeat.y,m=a.specularColorMap.offset.x,u=a.specularColorMap.offset.y,M=a.specularColorMap.wrapS,d=a.specularColorMap.wrapT,g=a.specularColorMap.center.x,h=a.specularColorMap.center.y,f=a.specularColorMap.rotation;!1===t.includes(a.specularColorMap.uuid)?(r="spcMap"+c,t.push(a.specularColorMap.uuid),p[a.specularColorMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="map_Psp -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="map_Psp -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.specularColorMap.uuid]+".png\n"}}if(a.thicknessMap&&1009===a.thicknessMap.type&&a.thicknessMap.image){let e=a.thicknessMap;if(!0===e.isCompressedTexture&&(e=decompress(a.thicknessMap,n)),!0===a.thicknessMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.thicknessMap.repeat.x,i=a.thicknessMap.repeat.y,m=a.thicknessMap.offset.x,u=a.thicknessMap.offset.y,M=a.thicknessMap.wrapS,d=a.thicknessMap.wrapT,g=a.thicknessMap.center.x,h=a.thicknessMap.center.y,f=a.thicknessMap.rotation;!1===t.includes(a.thicknessMap.uuid)?(r="thMap"+c,t.push(a.thicknessMap.uuid),p[a.thicknessMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="map_Pth -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="map_Pth -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.thicknessMap.uuid]+".png\n"}}if(a.transmissionMap&&1009===a.transmissionMap.type&&a.transmissionMap.image){let e=a.transmissionMap;if(!0===e.isCompressedTexture&&(e=decompress(a.transmissionMap,n)),!0===a.transmissionMap.isCompressedTexture||e.image.src||e.image.data||e.image instanceof ImageBitmap){const n=a.transmissionMap.repeat.x,i=a.transmissionMap.repeat.y,m=a.transmissionMap.offset.x,u=a.transmissionMap.offset.y,M=a.transmissionMap.wrapS,d=a.transmissionMap.wrapT,g=a.transmissionMap.center.x,h=a.transmissionMap.center.y,f=a.transmissionMap.rotation;!1===t.includes(a.transmissionMap.uuid)?(r="trMap"+c,t.push(a.transmissionMap.uuid),p[a.transmissionMap.uuid]=r,o.push({name:r,ext:l,data:C(e.image,l)}),s+="map_Ptr -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+r+".png\n"):s+="map_Ptr -r "+f+" -c "+g+" "+h+" -s "+n+" "+i+" 1 -o "+m+" "+u+" 0 -w "+M+" "+d+" "+p[a.transmissionMap.uuid]+".png\n"}}c+=1}}Object.keys(d).forEach((a=>{Array.isArray(d[a])?d[a].forEach((a=>{e=!1,M(a)})):(e=!1,M(d[a]))})),Promise.all(o).then((()=>{if("function"!=typeof a)return{obj:i,mtl:s,tex:o};a({obj:i,mtl:s,tex:o})}))}else{if("function"!=typeof a)return{obj:i};a({obj:i})}function C(e,a){let s,t;if(s=s||document.createElement("canvas"),s.width=Math.min(e.width,n),s.height=Math.min(e.height,n),t=t||s.getContext("2d"),!0===p&&(t.translate(0,s.height),t.scale(1,-1)),e instanceof ImageData)t.putImageData(e,0,0);else if(e.data&&e.data.constructor===Uint8Array){let a=new ImageData(new Uint8ClampedArray(e.data),e.width,e.height);t.putImageData(a,0,0)}else t.drawImage(e,0,0,s.width,s.height);return function(e){const a=atob(e),s=new Uint8Array(a.length);for(let e=0,t=s.length;e<t;e++)s[e]=a.charCodeAt(e);return s}(s.toDataURL(`image/${a}`,1).replace(/^data:image\/(png|jpg|jpeg);base64,/,""))}}}export{OBJExporter};