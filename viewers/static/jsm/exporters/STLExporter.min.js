import{Vector3}from"three";class STLExporter{parse(t,e={}){const o=(e=Object.assign({binary:!1},e)).binary,r=[];let n,s=0;t.traverse((function(t){if(t.isMesh){const e=t.geometry,o=e.index,n=e.getAttribute("position");s+=null!==o?o.count/3:n.count/3,r.push({object3d:t,geometry:e})}}));let i=80;if(!0===o){const t=new ArrayBuffer(2*s+3*s*4*4+80+4);n=new DataView(t),n.setUint32(i,s,!0),i+=4}else n="",n+="solid exported\n";const a=new Vector3,l=new Vector3,c=new Vector3,f=new Vector3,p=new Vector3,u=new Vector3;for(let t=0,e=r.length;t<e;t++){const e=r[t].object3d,o=r[t].geometry,n=o.index,s=o.getAttribute("position");if(null!==n)for(let t=0;t<n.count;t+=3){x(n.getX(t+0),n.getX(t+1),n.getX(t+2),s,e)}else for(let t=0;t<s.count;t+=3){x(t+0,t+1,t+2,s,e)}}return!1===o&&(n+="endsolid exported\n"),n;function x(t,e,r,s,x){a.fromBufferAttribute(s,t),l.fromBufferAttribute(s,e),c.fromBufferAttribute(s,r),!0===x.isSkinnedMesh&&(x.applyBoneTransform(t,a),x.applyBoneTransform(e,l),x.applyBoneTransform(r,c)),a.applyMatrix4(x.matrixWorld),l.applyMatrix4(x.matrixWorld),c.applyMatrix4(x.matrixWorld),function(t,e,r){f.subVectors(r,e),p.subVectors(t,e),f.cross(p).normalize(),u.copy(f).normalize(),!0===o?(n.setFloat32(i,u.x,!0),i+=4,n.setFloat32(i,u.y,!0),i+=4,n.setFloat32(i,u.z,!0),i+=4):(n+="\tfacet normal "+u.x+" "+u.y+" "+u.z+"\n",n+="\t\touter loop\n")}(a,l,c),m(a),m(l),m(c),!0===o?(n.setUint16(i,0,!0),i+=2):(n+="\t\tendloop\n",n+="\tendfacet\n")}function m(t){!0===o?(n.setFloat32(i,t.x,!0),i+=4,n.setFloat32(i,t.y,!0),i+=4,n.setFloat32(i,t.z,!0),i+=4):n+="\t\t\tvertex "+t.x+" "+t.y+" "+t.z+"\n"}}}export{STLExporter};